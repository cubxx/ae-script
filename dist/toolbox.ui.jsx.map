{"version":3,"file":"toolbox.ui.jsx","sources":["../node_modules/soil-ts/lodash/basic/_global.tsx","../node_modules/soil-ts/lodash/#has.tsx","../node_modules/soil-ts/lodash/#isObject.tsx","../node_modules/soil-ts/lodash/basic/assign.tsx","../node_modules/soil-ts/lodash/basic/contains.tsx","../node_modules/soil-ts/lodash/_internal/_getTag.tsx","../node_modules/soil-ts/lodash/basic/isArray.tsx","../node_modules/soil-ts/lodash/#isObjectLike.tsx","../node_modules/soil-ts/lodash/#isArguments.tsx","../node_modules/soil-ts/lodash/basic/_or.tsx","../node_modules/soil-ts/lodash/basic/stubFalse.tsx","../node_modules/soil-ts/lodash/#map.tsx","../node_modules/soil-ts/lodash/_internal/_isIndex.tsx","../node_modules/soil-ts/lodash/_internal/_arrayLikeKeys.tsx","../node_modules/soil-ts/lodash/#isLength.tsx","../node_modules/soil-ts/lodash/#isArrayLike.tsx","../node_modules/soil-ts/lodash/#keys.tsx","../node_modules/soil-ts/lodash/_internal/_isFlattenable.tsx","../node_modules/soil-ts/lodash/_internal/_baseFlatten.tsx","../node_modules/soil-ts/lodash/#reduce.tsx","../node_modules/soil-ts/lodash/#filter.tsx","../node_modules/soil-ts/lodash/_internal/_cloneRegExp.tsx","../node_modules/soil-ts/lodash/_internal/_copyArray.tsx","../node_modules/soil-ts/lodash/_internal/_copyObject.tsx","../node_modules/soil-ts/lodash/_internal/_initCloneObject.tsx","../node_modules/soil-ts/lodash/_internal/_baseClone.tsx","../node_modules/soil-ts/lodash/#clone.tsx","../node_modules/soil-ts/lodash/#forEach.tsx","../node_modules/soil-ts/lodash/_internal/_baseFindIndex.tsx","../node_modules/soil-ts/lodash/_internal/_baseIsNaN.tsx","../node_modules/soil-ts/lodash/_internal/_strictIndexOf.tsx","../node_modules/soil-ts/lodash/_internal/_baseIndexOf.tsx","../node_modules/soil-ts/lodash/_internal/_arrayIncludes.tsx","../node_modules/soil-ts/lodash/#some.tsx","../node_modules/soil-ts/lodash/#flatMap.tsx","../node_modules/soil-ts/lodash/#forOwn.tsx","../node_modules/soil-ts/lodash/#isNil.tsx","../node_modules/soil-ts/lodash/#isNull.tsx","../node_modules/soil-ts/lodash/_internal/_baseUniq.tsx","../node_modules/soil-ts/lodash/#uniq.tsx","../node_modules/soil-ts/_internal/_createIsNativeType.tsx","../node_modules/soil-ts/isPanel.tsx","../node_modules/soil-ts/isWindow.tsx","../node_modules/soil-ts/tree.tsx","../node_modules/soil-ts/eachProperties.ts","../node_modules/soil-ts/setUndoGroup.tsx","../src/util.tsx","../src/toolbox.ui.tsx"],"sourcesContent":["export const arrayProto = Array.prototype;\r\nexport const objectProto = Object.prototype;\r\n\r\nexport const hasOwnProperty = objectProto.hasOwnProperty;\r\nexport const nativeConcat = arrayProto.concat;\r\nexport const nativeJoin = arrayProto.join;\r\nexport const nativePush = arrayProto.push;\r\nexport const nativeSlice = arrayProto.slice;\r\nexport const nativeToString = objectProto.toString;\r\n\r\nexport const nativeCeil = Math.ceil;\r\nexport const nativeFloor = Math.floor;\r\nexport const nativeMax = Math.max;\r\nexport const nativeMin = Math.min;\r\nexport const nativeRandom = Math.random;\r\nexport const nativeRound = Math.round;\r\n\r\nexport const nativeParseFloat = parseFloat;\r\nexport const nativeParseInt = parseInt;\r\n\r\n/** Used as references for various `Number` constants. */\r\nexport const NAN = 0 / 0;\r\nexport const INFINITY = 1 / 0;\r\n\r\nexport const MAX_ARRAY_LENGTH = 4294967295;\r\nexport const MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;\r\nexport const HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\r\n\r\nexport const MAX_INTEGER = 1.7976931348623157e308;\r\nexport const MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n/** Used to match leading and trailing whitespace. */\r\nexport const reTrim = /^\\s+|\\s+$/g;\r\n\r\n/** Used to detect bad signed hexadecimal string values. */\r\nexport const reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n/** Used to detect binary string values. */\r\nexport const reIsBinary = /^0b[01]+$/i;\r\n\r\n/** Used to detect octal string values. */\r\nexport const reIsOctal = /^0o[0-7]+$/i;\r\n\r\n/** Used to match leading and trailing whitespace. */\r\nexport const reTrimStart = /^\\s+/;\r\n\r\n/** Used to map characters to HTML entities. */\r\nexport const htmlEscapes = {\r\n    \"&\": \"&amp;\",\r\n    \"<\": \"&lt;\",\r\n    \">\": \"&gt;\",\r\n    '\"': \"&quot;\",\r\n    \"'\": \"&#39;\",\r\n};\r\n\r\n/** Used to map HTML entities to characters. */\r\nexport const htmlUnescapes = {\r\n    \"&amp;\": \"&\",\r\n    \"&lt;\": \"<\",\r\n    \"&gt;\": \">\",\r\n    \"&quot;\": '\"',\r\n    \"&#39;\": \"'\",\r\n};\r\n\r\n/** Used to match HTML entities and HTML characters. */\r\nexport const reEscapedHtml = /&(?:amp|lt|gt|quot|#(0+)?39);/g;\r\nexport const reHasEscapedHtml = RegExp(reEscapedHtml.source);\r\n\r\n/** Used to match HTML entities and HTML characters. */\r\nexport const reUnescapedHtml = /[&<>\"']/g;\r\nexport const reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\r\n\r\n/**\r\n * Used to match `RegExp`\r\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\r\n */\r\nexport const reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\r\nexport const reHasRegExpChar = RegExp(reRegExpChar.source);\r\n\r\n/**\r\n * Used to match `RegExp`\r\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\r\n */\r\n// const reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\r\n\r\nexport const reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\r\n\r\n/** Used to match words composed of alphanumeric characters. */\r\nexport const reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\r\n\r\n/** Used to detect if a method is native. */\r\nexport const reIsNative = /^\\nfunction.*?\\(\\) \\{\\n    \\[native code\\]\\n\\}\\n$/;\r\n// export const reIsNative = RegExp(\r\n//     `^${Function.prototype.toString\r\n//         .call(Object.prototype.hasOwnProperty)\r\n//         .replace(reRegExpChar, \"\\\\$&\")\r\n//         .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\")}$`\r\n// );\r\n\r\nexport const reQuotes = /['\\u2019]/g;\r\n\r\nexport const reFlags = /\\w*$/;\r\n\r\n/** Used to match property names within property paths. */\r\nexport const reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/;\r\nexport const reIsPlainProp = /^\\w*$/;\r\n\r\nexport const charCodeOfDot = \".\".charCodeAt(0);\r\nexport const reEscapeChar = /\\\\(\\\\)?/g;\r\nexport const rePropName = /[^.[\\]]+|\\[(?:([^\"'][^[]*)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\r\n// const rePropName = RegExp(\r\n//     // Match anything that isn't a dot or bracket.\r\n//     \"[^.[\\\\]]+\" +\r\n//         \"|\" +\r\n//         // Or match property names within brackets.\r\n//         \"\\\\[(?:\" +\r\n//         // Match a non-string expression.\r\n//         \"([^\\\"'][^[]*)\" +\r\n//         \"|\" +\r\n//         // Or match strings (supports escaping characters).\r\n//         \"([\\\"'])((?:(?!\\\\2)[^\\\\\\\\]|\\\\\\\\.)*?)\\\\2\" +\r\n//         \")\\\\]\" +\r\n//         \"|\" +\r\n//         // Or match \"\" as the space between consecutive dots or empty brackets.\r\n//         \"(?=(?:\\\\.|\\\\[\\\\])(?:\\\\.|\\\\[\\\\]|$))\",\r\n//     \"g\"\r\n// );\r\n\r\n/** Used to compose unicode character classes. */\r\nconst rsAstralRange = \"\\\\ud800-\\\\udfff\";\r\nconst rsComboMarksRange = \"\\\\u0300-\\\\u036f\";\r\nconst reComboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\";\r\nconst rsComboSymbolsRange = \"\\\\u20d0-\\\\u20ff\";\r\nconst rsComboMarksExtendedRange = \"\\\\u1ab0-\\\\u1aff\";\r\nconst rsComboMarksSupplementRange = \"\\\\u1dc0-\\\\u1dff\";\r\nconst rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange + rsComboMarksExtendedRange + rsComboMarksSupplementRange;\r\nconst rsVarRange = \"\\\\ufe0e\\\\ufe0f\";\r\n\r\n/** Used to compose unicode capture groups. */\r\nconst rsAstral = `[${rsAstralRange}]`;\r\nconst rsCombo = `[${rsComboRange}]`;\r\nconst rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\";\r\nconst rsModifier = `(?:${rsCombo}|${rsFitz})`;\r\nconst rsNonAstral = `[^${rsAstralRange}]`;\r\nconst rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\";\r\nconst rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\";\r\nconst rsZWJ = \"\\\\u200d\";\r\n\r\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\r\nexport const reHasUnicode = RegExp(`[${rsZWJ + rsAstralRange + rsComboRange + rsVarRange}]`);\r\n\r\n/** Used to detect unsigned integer values. */\r\nexport const reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n/** Used to compose unicode regexes. */\r\nconst reOptMod = `${rsModifier}?`;\r\nconst rsOptVar = `[${rsVarRange}]?`;\r\nconst rsOptJoin = `(?:${rsZWJ}(?:${[rsNonAstral, rsRegional, rsSurrPair].join(\"|\")})${rsOptVar + reOptMod})*`;\r\nconst rsSeq = rsOptVar + reOptMod + rsOptJoin;\r\nconst rsNonAstralCombo = `${rsNonAstral}${rsCombo}?`;\r\nconst rsSymbol = `(?:${[rsNonAstralCombo, rsCombo, rsRegional, rsSurrPair, rsAstral].join(\"|\")})`;\r\n\r\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\r\nexport const reUnicode = RegExp(`${rsFitz}(?=${rsFitz})|${rsSymbol + rsSeq}`, \"g\");\r\n\r\nconst rsDingbatRange = \"\\\\u2700-\\\\u27bf\";\r\nconst rsLowerRange = \"a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff\";\r\nconst rsMathOpRange = \"\\\\xac\\\\xb1\\\\xd7\\\\xf7\";\r\nconst rsNonCharRange = \"\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\";\r\nconst rsPunctuationRange = \"\\\\u2000-\\\\u206f\";\r\nconst rsSpaceRange = \" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\";\r\nconst rsUpperRange = \"A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\";\r\nconst rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\r\n\r\n/** Used to compose unicode capture groups. */\r\nconst rsApos = \"['\\u2019]\";\r\nconst rsBreak = `[${rsBreakRange}]`;\r\nconst rsDigit = \"\\\\d\";\r\nconst rsDingbat = `[${rsDingbatRange}]`;\r\nconst rsLower = `[${rsLowerRange}]`;\r\nconst rsMisc = `[^${rsAstralRange}${rsBreakRange + rsDigit + rsDingbatRange + rsLowerRange + rsUpperRange}]`;\r\nconst rsUpper = `[${rsUpperRange}]`;\r\n\r\n/** Used to compose unicode regexes. */\r\nconst rsMiscLower = `(?:${rsLower}|${rsMisc})`;\r\nconst rsMiscUpper = `(?:${rsUpper}|${rsMisc})`;\r\nconst rsOptContrLower = `(?:${rsApos}(?:d|ll|m|re|s|t|ve))?`;\r\nconst rsOptContrUpper = `(?:${rsApos}(?:D|LL|M|RE|S|T|VE))?`;\r\nconst rsOrdLower = \"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\";\r\nconst rsOrdUpper = \"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\";\r\nconst rsEmoji = `(?:${[rsDingbat, rsRegional, rsSurrPair].join(\"|\")})${rsSeq}`;\r\n\r\nexport const reUnicodeWords = RegExp([`${rsUpper}?${rsLower}+${rsOptContrLower}(?=${[rsBreak, rsUpper, \"$\"].join(\"|\")})`, `${rsMiscUpper}+${rsOptContrUpper}(?=${[rsBreak, rsUpper + rsMiscLower, \"$\"].join(\"|\")})`, `${rsUpper}?${rsMiscLower}+${rsOptContrLower}`, `${rsUpper}+${rsOptContrUpper}`, rsOrdUpper, rsOrdLower, `${rsDigit}+`, rsEmoji].join(\"|\"), \"g\");\r\n\r\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\r\nexport const reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\r\n\r\n/**\r\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\r\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\r\n */\r\nexport const reComboMark = RegExp(rsCombo, \"g\");\r\n\r\nexport const deburredLetters = {\r\n    // Latin-1 Supplement block.\r\n    \"\\xc0\": \"A\",\r\n    \"\\xc1\": \"A\",\r\n    \"\\xc2\": \"A\",\r\n    \"\\xc3\": \"A\",\r\n    \"\\xc4\": \"A\",\r\n    \"\\xc5\": \"A\",\r\n    \"\\xe0\": \"a\",\r\n    \"\\xe1\": \"a\",\r\n    \"\\xe2\": \"a\",\r\n    \"\\xe3\": \"a\",\r\n    \"\\xe4\": \"a\",\r\n    \"\\xe5\": \"a\",\r\n    \"\\xc7\": \"C\",\r\n    \"\\xe7\": \"c\",\r\n    \"\\xd0\": \"D\",\r\n    \"\\xf0\": \"d\",\r\n    \"\\xc8\": \"E\",\r\n    \"\\xc9\": \"E\",\r\n    \"\\xca\": \"E\",\r\n    \"\\xcb\": \"E\",\r\n    \"\\xe8\": \"e\",\r\n    \"\\xe9\": \"e\",\r\n    \"\\xea\": \"e\",\r\n    \"\\xeb\": \"e\",\r\n    \"\\xcc\": \"I\",\r\n    \"\\xcd\": \"I\",\r\n    \"\\xce\": \"I\",\r\n    \"\\xcf\": \"I\",\r\n    \"\\xec\": \"i\",\r\n    \"\\xed\": \"i\",\r\n    \"\\xee\": \"i\",\r\n    \"\\xef\": \"i\",\r\n    \"\\xd1\": \"N\",\r\n    \"\\xf1\": \"n\",\r\n    \"\\xd2\": \"O\",\r\n    \"\\xd3\": \"O\",\r\n    \"\\xd4\": \"O\",\r\n    \"\\xd5\": \"O\",\r\n    \"\\xd6\": \"O\",\r\n    \"\\xd8\": \"O\",\r\n    \"\\xf2\": \"o\",\r\n    \"\\xf3\": \"o\",\r\n    \"\\xf4\": \"o\",\r\n    \"\\xf5\": \"o\",\r\n    \"\\xf6\": \"o\",\r\n    \"\\xf8\": \"o\",\r\n    \"\\xd9\": \"U\",\r\n    \"\\xda\": \"U\",\r\n    \"\\xdb\": \"U\",\r\n    \"\\xdc\": \"U\",\r\n    \"\\xf9\": \"u\",\r\n    \"\\xfa\": \"u\",\r\n    \"\\xfb\": \"u\",\r\n    \"\\xfc\": \"u\",\r\n    \"\\xdd\": \"Y\",\r\n    \"\\xfd\": \"y\",\r\n    \"\\xff\": \"y\",\r\n    \"\\xc6\": \"Ae\",\r\n    \"\\xe6\": \"ae\",\r\n    \"\\xde\": \"Th\",\r\n    \"\\xfe\": \"th\",\r\n    \"\\xdf\": \"ss\",\r\n    // Latin Extended-A block.\r\n    \"\\u0100\": \"A\",\r\n    \"\\u0102\": \"A\",\r\n    \"\\u0104\": \"A\",\r\n    \"\\u0101\": \"a\",\r\n    \"\\u0103\": \"a\",\r\n    \"\\u0105\": \"a\",\r\n    \"\\u0106\": \"C\",\r\n    \"\\u0108\": \"C\",\r\n    \"\\u010a\": \"C\",\r\n    \"\\u010c\": \"C\",\r\n    \"\\u0107\": \"c\",\r\n    \"\\u0109\": \"c\",\r\n    \"\\u010b\": \"c\",\r\n    \"\\u010d\": \"c\",\r\n    \"\\u010e\": \"D\",\r\n    \"\\u0110\": \"D\",\r\n    \"\\u010f\": \"d\",\r\n    \"\\u0111\": \"d\",\r\n    \"\\u0112\": \"E\",\r\n    \"\\u0114\": \"E\",\r\n    \"\\u0116\": \"E\",\r\n    \"\\u0118\": \"E\",\r\n    \"\\u011a\": \"E\",\r\n    \"\\u0113\": \"e\",\r\n    \"\\u0115\": \"e\",\r\n    \"\\u0117\": \"e\",\r\n    \"\\u0119\": \"e\",\r\n    \"\\u011b\": \"e\",\r\n    \"\\u011c\": \"G\",\r\n    \"\\u011e\": \"G\",\r\n    \"\\u0120\": \"G\",\r\n    \"\\u0122\": \"G\",\r\n    \"\\u011d\": \"g\",\r\n    \"\\u011f\": \"g\",\r\n    \"\\u0121\": \"g\",\r\n    \"\\u0123\": \"g\",\r\n    \"\\u0124\": \"H\",\r\n    \"\\u0126\": \"H\",\r\n    \"\\u0125\": \"h\",\r\n    \"\\u0127\": \"h\",\r\n    \"\\u0128\": \"I\",\r\n    \"\\u012a\": \"I\",\r\n    \"\\u012c\": \"I\",\r\n    \"\\u012e\": \"I\",\r\n    \"\\u0130\": \"I\",\r\n    \"\\u0129\": \"i\",\r\n    \"\\u012b\": \"i\",\r\n    \"\\u012d\": \"i\",\r\n    \"\\u012f\": \"i\",\r\n    \"\\u0131\": \"i\",\r\n    \"\\u0134\": \"J\",\r\n    \"\\u0135\": \"j\",\r\n    \"\\u0136\": \"K\",\r\n    \"\\u0137\": \"k\",\r\n    \"\\u0138\": \"k\",\r\n    \"\\u0139\": \"L\",\r\n    \"\\u013b\": \"L\",\r\n    \"\\u013d\": \"L\",\r\n    \"\\u013f\": \"L\",\r\n    \"\\u0141\": \"L\",\r\n    \"\\u013a\": \"l\",\r\n    \"\\u013c\": \"l\",\r\n    \"\\u013e\": \"l\",\r\n    \"\\u0140\": \"l\",\r\n    \"\\u0142\": \"l\",\r\n    \"\\u0143\": \"N\",\r\n    \"\\u0145\": \"N\",\r\n    \"\\u0147\": \"N\",\r\n    \"\\u014a\": \"N\",\r\n    \"\\u0144\": \"n\",\r\n    \"\\u0146\": \"n\",\r\n    \"\\u0148\": \"n\",\r\n    \"\\u014b\": \"n\",\r\n    \"\\u014c\": \"O\",\r\n    \"\\u014e\": \"O\",\r\n    \"\\u0150\": \"O\",\r\n    \"\\u014d\": \"o\",\r\n    \"\\u014f\": \"o\",\r\n    \"\\u0151\": \"o\",\r\n    \"\\u0154\": \"R\",\r\n    \"\\u0156\": \"R\",\r\n    \"\\u0158\": \"R\",\r\n    \"\\u0155\": \"r\",\r\n    \"\\u0157\": \"r\",\r\n    \"\\u0159\": \"r\",\r\n    \"\\u015a\": \"S\",\r\n    \"\\u015c\": \"S\",\r\n    \"\\u015e\": \"S\",\r\n    \"\\u0160\": \"S\",\r\n    \"\\u015b\": \"s\",\r\n    \"\\u015d\": \"s\",\r\n    \"\\u015f\": \"s\",\r\n    \"\\u0161\": \"s\",\r\n    \"\\u0162\": \"T\",\r\n    \"\\u0164\": \"T\",\r\n    \"\\u0166\": \"T\",\r\n    \"\\u0163\": \"t\",\r\n    \"\\u0165\": \"t\",\r\n    \"\\u0167\": \"t\",\r\n    \"\\u0168\": \"U\",\r\n    \"\\u016a\": \"U\",\r\n    \"\\u016c\": \"U\",\r\n    \"\\u016e\": \"U\",\r\n    \"\\u0170\": \"U\",\r\n    \"\\u0172\": \"U\",\r\n    \"\\u0169\": \"u\",\r\n    \"\\u016b\": \"u\",\r\n    \"\\u016d\": \"u\",\r\n    \"\\u016f\": \"u\",\r\n    \"\\u0171\": \"u\",\r\n    \"\\u0173\": \"u\",\r\n    \"\\u0174\": \"W\",\r\n    \"\\u0175\": \"w\",\r\n    \"\\u0176\": \"Y\",\r\n    \"\\u0177\": \"y\",\r\n    \"\\u0178\": \"Y\",\r\n    \"\\u0179\": \"Z\",\r\n    \"\\u017b\": \"Z\",\r\n    \"\\u017d\": \"Z\",\r\n    \"\\u017a\": \"z\",\r\n    \"\\u017c\": \"z\",\r\n    \"\\u017e\": \"z\",\r\n    \"\\u0132\": \"IJ\",\r\n    \"\\u0133\": \"ij\",\r\n    \"\\u0152\": \"Oe\",\r\n    \"\\u0153\": \"oe\",\r\n    \"\\u0149\": \"'n\",\r\n    \"\\u017f\": \"s\",\r\n};\r\n","import { hasOwnProperty } from \"./basic/_global\";\r\n\r\n/**\r\n * Checks if `key` is a direct property of `object`.\r\n *\r\n * @since 0.1.0\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @param {string} key The key to check.\r\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\r\n * @see hasIn, hasPath, hasPathIn\r\n * @example\r\n *\r\n * const object = { 'a': { 'b': 2 } }\r\n * const other = create({ 'a': create({ 'b': 2 }) })\r\n *\r\n * has(object, 'a')\r\n * // => true\r\n *\r\n * has(other, 'a')\r\n * // => false\r\n */\r\nfunction has(object: any, key: PropertyName): boolean {\r\n    return object != null && hasOwnProperty.call(object, key);\r\n}\r\n\r\nexport default has;\r\n// /** Used to check objects for own properties. */\r\n// const hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n// /**\r\n//  * Checks if `key` is a direct property of `object`.\r\n//  *\r\n//  * @since 0.1.0\r\n//  * @category Object\r\n//  * @param {Object} object The object to query.\r\n//  * @param {string} key The key to check.\r\n//  * @returns {boolean} Returns `true` if `key` exists, else `false`.\r\n//  * @see hasIn, hasPath, hasPathIn\r\n//  * @example\r\n//  *\r\n//  * const object = { 'a': { 'b': 2 } }\r\n//  * const other = create({ 'a': create({ 'b': 2 }) })\r\n//  *\r\n//  * has(object, 'a')\r\n//  * // => true\r\n//  *\r\n//  * has(other, 'a')\r\n//  * // => false\r\n//  */\r\n// function has(object, key) {\r\n//     return object != null && hasOwnProperty.call(object, key);\r\n// }\r\n\r\n// export default has;\r\n","/**\r\n * Checks if `value` is the\r\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\r\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n *\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\r\n * @example\r\n *\r\n * isObject({})\r\n * // => true\r\n *\r\n * isObject([1, 2, 3])\r\n * // => true\r\n *\r\n * isObject(Function)\r\n * // => true\r\n *\r\n * isObject(null)\r\n * // => false\r\n */\r\nfunction isObject(value: any): value is object {\r\n    if (value == null) {\r\n        return false;\r\n    }\r\n    const type = typeof value;\r\n    return type === \"object\" || type === \"function\";\r\n}\r\n\r\nexport default isObject;\r\n// /**\r\n//  * Checks if `value` is the\r\n//  * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\r\n//  * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n//  *\r\n//  * @since 0.1.0\r\n//  * @category Lang\r\n//  * @param {*} value The value to check.\r\n//  * @returns {boolean} Returns `true` if `value` is an object, else `false`.\r\n//  * @example\r\n//  *\r\n//  * isObject({})\r\n//  * // => true\r\n//  *\r\n//  * isObject([1, 2, 3])\r\n//  * // => true\r\n//  *\r\n//  * isObject(Function)\r\n//  * // => true\r\n//  *\r\n//  * isObject(null)\r\n//  * // => false\r\n//  */\r\n// function isObject(value) {\r\n//     const type = typeof value;\r\n//     return value != null && (type === \"object\" || type === \"function\");\r\n// }\r\n\r\n// export default isObject;\r\n","import has from \"../#has\";\r\nimport isObject from \"../#isObject\";\r\n\r\nfunction assign<T extends object, U extends object>(object: T, source: U): { [P in keyof T | keyof U]: P extends keyof U ? U[P] : P extends keyof T ? T[P] : never } {\r\n    const result: any = Object(object);\r\n\r\n    if (isObject(source)) {\r\n        for (const key in source) {\r\n            if (has(source, key)) {\r\n                result[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default assign;\r\n","function contains(array: Array<any>, value: any): boolean {\r\n    let index = -1;\r\n    const length = array.length;\r\n\r\n    while (++index < length) {\r\n        if (array[index] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport default contains;\r\n","import { nativeToString } from \"../basic/_global\";\r\n\r\n/**\r\n * Gets the `toStringTag` of `value`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @returns {string} Returns the `toStringTag`.\r\n */\r\nfunction getTag(value: any): string {\r\n    if (value == null) {\r\n        return value === undefined ? \"[object Undefined]\" : \"[object Null]\";\r\n    }\r\n    return nativeToString.call(value);\r\n}\r\n\r\nexport default getTag;\r\n// const toString = Object.prototype.toString;\r\n\r\n// /**\r\n//  * Gets the `toStringTag` of `value`.\r\n//  *\r\n//  * @private\r\n//  * @param {*} value The value to query.\r\n//  * @returns {string} Returns the `toStringTag`.\r\n//  */\r\n// function getTag(value) {\r\n//     if (value == null) {\r\n//         return value === undefined ? \"[object Undefined]\" : \"[object Null]\";\r\n//     }\r\n//     return toString.call(value);\r\n// }\r\n\r\n// export default getTag;\r\n","import getTag from \"../_internal/_getTag\";\r\n\r\nfunction isArray(value: any): value is Array<any> {\r\n    return getTag(value) == \"[object Array]\";\r\n}\r\n\r\nexport default isArray;\r\n","/**\r\n * Checks if `value` is object-like. A value is object-like if it's not `null`\r\n * and has a `typeof` result of \"object\".\r\n *\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\r\n * @example\r\n *\r\n * isObjectLike({})\r\n * // => true\r\n *\r\n * isObjectLike([1, 2, 3])\r\n * // => true\r\n *\r\n * isObjectLike(Function)\r\n * // => false\r\n *\r\n * isObjectLike(null)\r\n * // => false\r\n */\r\nfunction isObjectLike(value: any): boolean {\r\n    return typeof value === \"object\" && value !== null;\r\n}\r\n\r\nexport default isObjectLike;\r\n// /**\r\n//  * Checks if `value` is object-like. A value is object-like if it's not `null`\r\n//  * and has a `typeof` result of \"object\".\r\n//  *\r\n//  * @since 4.0.0\r\n//  * @category Lang\r\n//  * @param {*} value The value to check.\r\n//  * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\r\n//  * @example\r\n//  *\r\n//  * isObjectLike({})\r\n//  * // => true\r\n//  *\r\n//  * isObjectLike([1, 2, 3])\r\n//  * // => true\r\n//  *\r\n//  * isObjectLike(Function)\r\n//  * // => false\r\n//  *\r\n//  * isObjectLike(null)\r\n//  * // => false\r\n//  */\r\n// function isObjectLike(value) {\r\n//     return typeof value === \"object\" && value !== null;\r\n// }\r\n\r\n// export default isObjectLike;\r\n","import getTag from \"./_internal/_getTag\";\r\nimport isObjectLike from \"./#isObjectLike\";\r\n\r\n/**\r\n * Checks if `value` is likely an `arguments` object.\r\n *\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an `arguments` object, else `false`.\r\n * @example\r\n *\r\n * isArguments(function() { return arguments }())\r\n * // => true\r\n *\r\n * isArguments([1, 2, 3])\r\n * // => false\r\n */\r\nfunction isArguments(value: any): value is IArguments {\r\n    return isObjectLike(value) && getTag(value) == \"[object Arguments]\";\r\n}\r\n\r\nexport default isArguments;\r\n// import getTag from \"./_internal/getTag.js\";\r\n// import isObjectLike from \"./isObjectLike.js\";\r\n\r\n// /**\r\n//  * Checks if `value` is likely an `arguments` object.\r\n//  *\r\n//  * @since 0.1.0\r\n//  * @category Lang\r\n//  * @param {*} value The value to check.\r\n//  * @returns {boolean} Returns `true` if `value` is an `arguments` object, else `false`.\r\n//  * @example\r\n//  *\r\n//  * isArguments(function() { return arguments }())\r\n//  * // => true\r\n//  *\r\n//  * isArguments([1, 2, 3])\r\n//  * // => false\r\n//  */\r\n// function isArguments(value) {\r\n//     return isObjectLike(value) && getTag(value) == \"[object Arguments]\";\r\n// }\r\n\r\n// export default isArguments;\r\n","function or(...args: Array<boolean>): boolean {\r\n    let index = -1;\r\n    const length = arguments.length;\r\n\r\n    while (++index < length) {\r\n        if (arguments[index]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport default or;\r\n","function stubFalse(): false {\r\n    return false;\r\n}\r\n\r\nexport default stubFalse;\r\n","/**\r\n * Creates an array of values by running each element of `array` thru `iteratee`.\r\n * The iteratee is invoked with three arguments: (value, index, array).\r\n *\r\n * @since 5.0.0\r\n * @category Array\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns the new mapped array.\r\n * @example\r\n *\r\n * function square(n) {\r\n *   return n * n\r\n * }\r\n *\r\n * map([4, 8], square)\r\n * // => [16, 64]\r\n */\r\nfunction map<T, TResult>(array: Array<T>, iteratee: ArrayIterator<T, TResult>): Array<TResult> {\r\n    let index = -1;\r\n    const length = array == null ? 0 : array.length;\r\n    const result = new Array(length);\r\n\r\n    while (++index < length) {\r\n        result[index] = iteratee(array[index], index, array);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default map;\r\n// /**\r\n//  * Creates an array of values by running each element of `array` thru `iteratee`.\r\n//  * The iteratee is invoked with three arguments: (value, index, array).\r\n//  *\r\n//  * @since 5.0.0\r\n//  * @category Array\r\n//  * @param {Array} array The array to iterate over.\r\n//  * @param {Function} iteratee The function invoked per iteration.\r\n//  * @returns {Array} Returns the new mapped array.\r\n//  * @example\r\n//  *\r\n//  * function square(n) {\r\n//  *   return n * n\r\n//  * }\r\n//  *\r\n//  * map([4, 8], square)\r\n//  * // => [16, 64]\r\n//  */\r\n// function map(array, iteratee) {\r\n//     let index = -1;\r\n//     const length = array == null ? 0 : array.length;\r\n//     const result = new Array(length);\r\n\r\n//     while (++index < length) {\r\n//         result[index] = iteratee(array[index], index, array);\r\n//     }\r\n//     return result;\r\n// }\r\n\r\n// export default map;\r\n","import { MAX_SAFE_INTEGER, reIsUint } from \"../basic/_global\";\r\nimport or from \"../basic/_or\";\r\n\r\n/**\r\n * Checks if `value` is a valid array-like index.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\r\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\r\n */\r\nfunction isIndex(value: any, length?: number): boolean {\r\n    const type = typeof value;\r\n    length = length == null ? MAX_SAFE_INTEGER : length;\r\n    return !!length && or(type === \"number\", reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\r\n}\r\n\r\nexport default isIndex;\r\n// /** Used as references for various `Number` constants. */\r\n// const MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n// /** Used to detect unsigned integer values. */\r\n// const reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n// /**\r\n//  * Checks if `value` is a valid array-like index.\r\n//  *\r\n//  * @private\r\n//  * @param {*} value The value to check.\r\n//  * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\r\n//  * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\r\n//  */\r\n// function isIndex(value, length) {\r\n//     const type = typeof value;\r\n//     length = length == null ? MAX_SAFE_INTEGER : length;\r\n\r\n//     return !!length && (type === \"number\" || (type !== \"symbol\" && reIsUint.test(value))) && value > -1 && value % 1 == 0 && value < length;\r\n// }\r\n\r\n// export default isIndex;\r\n","import isArray from \"../basic/isArray\";\r\nimport isIndex from \"./_isIndex\";\r\nimport has from \"../#has\";\r\nimport isArguments from \"../#isArguments\";\r\n\r\n/** Used to check objects for own properties. */\r\n// const hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n/**\r\n * Creates an array of the enumerable property names of the array-like `value`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @param {boolean} inherited Specify returning inherited property names.\r\n * @returns {Array} Returns the array of property names.\r\n */\r\nfunction arrayLikeKeys(value: any, inherited?: boolean): Array<string> {\r\n    const isArr = isArray(value);\r\n    const isArg = !isArr && isArguments(value);\r\n    const skipIndexes = isArr || isArg;\r\n    const length = value.length;\r\n    const result = new Array(skipIndexes ? length : 0);\r\n    let index = skipIndexes ? -1 : length;\r\n    while (++index < length) {\r\n        result[index] = `${index}`;\r\n    }\r\n    for (const key in value) {\r\n        if ((inherited || has(value, key)) && !(skipIndexes && (key === \"length\" || isIndex(key, length)))) {\r\n            result.push(key);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default arrayLikeKeys;\r\n// import isArguments from \"../isArguments.js\";\r\n// import isBuffer from \"../isBuffer.js\";\r\n// import isIndex from \"./isIndex.js\";\r\n// import isTypedArray from \"../isTypedArray.js\";\r\n\r\n// /** Used to check objects for own properties. */\r\n// const hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n// /**\r\n//  * Creates an array of the enumerable property names of the array-like `value`.\r\n//  *\r\n//  * @private\r\n//  * @param {*} value The value to query.\r\n//  * @param {boolean} inherited Specify returning inherited property names.\r\n//  * @returns {Array} Returns the array of property names.\r\n//  */\r\n// function arrayLikeKeys(value, inherited) {\r\n//     const isArr = Array.isArray(value);\r\n//     const isArg = !isArr && isArguments(value);\r\n//     const isBuff = !isArr && !isArg && isBuffer(value);\r\n//     const isType = !isArr && !isArg && !isBuff && isTypedArray(value);\r\n//     const skipIndexes = isArr || isArg || isBuff || isType;\r\n//     const length = value.length;\r\n//     const result = new Array(skipIndexes ? length : 0);\r\n//     let index = skipIndexes ? -1 : length;\r\n//     while (++index < length) {\r\n//         result[index] = `${index}`;\r\n//     }\r\n//     for (const key in value) {\r\n//         if (\r\n//             (inherited || hasOwnProperty.call(value, key)) &&\r\n//             !(\r\n//                 skipIndexes &&\r\n//                 // Safari 9 has enumerable `arguments.length` in strict mode.\r\n//                 (key === \"length\" ||\r\n//                     // Skip index properties.\r\n//                     isIndex(key, length))\r\n//             )\r\n//         ) {\r\n//             result.push(key);\r\n//         }\r\n//     }\r\n//     return result;\r\n// }\r\n","import { MAX_SAFE_INTEGER } from \"./basic/_global\";\r\n\r\n/**\r\n * Checks if `value` is a valid array-like length.\r\n *\r\n * **Note:** This method is loosely based on\r\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\r\n *\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\r\n * @example\r\n *\r\n * isLength(3)\r\n * // => true\r\n *\r\n * isLength(Number.MIN_VALUE)\r\n * // => false\r\n *\r\n * isLength(Infinity)\r\n * // => false\r\n *\r\n * isLength('3')\r\n * // => false\r\n */\r\nfunction isLength(value: any): boolean {\r\n    return typeof value === \"number\" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\r\n}\r\n\r\nexport default isLength;\r\n// /** Used as references for various `Number` constants. */\r\n// const MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n// /**\r\n//  * Checks if `value` is a valid array-like length.\r\n//  *\r\n//  * **Note:** This method is loosely based on\r\n//  * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\r\n//  *\r\n//  * @since 4.0.0\r\n//  * @category Lang\r\n//  * @param {*} value The value to check.\r\n//  * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\r\n//  * @example\r\n//  *\r\n//  * isLength(3)\r\n//  * // => true\r\n//  *\r\n//  * isLength(Number.MIN_VALUE)\r\n//  * // => false\r\n//  *\r\n//  * isLength(Infinity)\r\n//  * // => false\r\n//  *\r\n//  * isLength('3')\r\n//  * // => false\r\n//  */\r\n// function isLength(value) {\r\n//     return typeof value === \"number\" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\r\n// }\r\n\r\n// export default isLength;\r\n","import isLength from \"./#isLength\";\r\n\r\n/**\r\n * Checks if `value` is array-like. A value is considered array-like if it's\r\n * not a function and has a `value.length` that's an integer greater than or\r\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n *\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n * @example\r\n *\r\n * isArrayLike([1, 2, 3])\r\n * // => true\r\n *\r\n * isArrayLike(document.body.children)\r\n * // => true\r\n *\r\n * isArrayLike('abc')\r\n * // => true\r\n *\r\n * isArrayLike(Function)\r\n * // => false\r\n */\r\n// function isArrayLike(value: AnyFunction | null | undefined): value is never;\r\n// function isArrayLike(value: any): value is { length: number };\r\nfunction isArrayLike(value: any): value is ArrayLike<any> {\r\n    return value != null && typeof value !== \"function\" && isLength(value.length);\r\n}\r\n\r\nexport default isArrayLike;\r\n// import isLength from \"./isLength.js\";\r\n\r\n// /**\r\n//  * Checks if `value` is array-like. A value is considered array-like if it's\r\n//  * not a function and has a `value.length` that's an integer greater than or\r\n//  * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n//  *\r\n//  * @since 4.0.0\r\n//  * @category Lang\r\n//  * @param {*} value The value to check.\r\n//  * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n//  * @example\r\n//  *\r\n//  * isArrayLike([1, 2, 3])\r\n//  * // => true\r\n//  *\r\n//  * isArrayLike(document.body.children)\r\n//  * // => true\r\n//  *\r\n//  * isArrayLike('abc')\r\n//  * // => true\r\n//  *\r\n//  * isArrayLike(Function)\r\n//  * // => false\r\n//  */\r\n// function isArrayLike(value) {\r\n//     return value != null && typeof value !== \"function\" && isLength(value.length);\r\n// }\r\n\r\n// export default isArrayLike;\r\n","import arrayLikeKeys from \"./_internal/_arrayLikeKeys\";\r\nimport has from \"./#has\";\r\nimport isArrayLike from \"./#isArrayLike\";\r\n\r\n/**\r\n * Creates an array of the own enumerable property names of `object`.\r\n *\r\n * **Note:** Non-object values are coerced to objects. See the\r\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\r\n * for more details.\r\n *\r\n * @since 0.1.0\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n * @see values, valuesIn\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1\r\n *   this.b = 2\r\n * }\r\n *\r\n * Foo.prototype.c = 3\r\n *\r\n * keys(new Foo)\r\n * // => ['a', 'b'] (iteration order is not guaranteed)\r\n *\r\n * keys('hi')\r\n * // => ['0', '1']\r\n */\r\nfunction keys<T extends object>(object: T): Array<Extract<keyof T, string>> {\r\n    if (object == null) {\r\n        return [];\r\n    }\r\n    if (isArrayLike(object)) {\r\n        return arrayLikeKeys(object) as Array<Extract<keyof T, string>>;\r\n    }\r\n    let result = [];\r\n    for (const key in object) {\r\n        if (has(object, key)) {\r\n            result.push(key);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default keys;\r\n// import arrayLikeKeys from \"./_internal/arrayLikeKeys.js\";\r\n// import isArrayLike from \"./isArrayLike.js\";\r\n\r\n// /**\r\n//  * Creates an array of the own enumerable property names of `object`.\r\n//  *\r\n//  * **Note:** Non-object values are coerced to objects. See the\r\n//  * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\r\n//  * for more details.\r\n//  *\r\n//  * @since 0.1.0\r\n//  * @category Object\r\n//  * @param {Object} object The object to query.\r\n//  * @returns {Array} Returns the array of property names.\r\n//  * @see values, valuesIn\r\n//  * @example\r\n//  *\r\n//  * function Foo() {\r\n//  *   this.a = 1\r\n//  *   this.b = 2\r\n//  * }\r\n//  *\r\n//  * Foo.prototype.c = 3\r\n//  *\r\n//  * keys(new Foo)\r\n//  * // => ['a', 'b'] (iteration order is not guaranteed)\r\n//  *\r\n//  * keys('hi')\r\n//  * // => ['0', '1']\r\n//  */\r\n// function keys(object) {\r\n//     return isArrayLike(object) ? arrayLikeKeys(object) : Object.keys(Object(object));\r\n// }\r\n\r\n// export default keys;\r\n","import isArray from \"../basic/isArray\";\r\nimport isArguments from \"../#isArguments\";\r\n\r\n/** Built-in value reference. */\r\n// const spreadableSymbol = Symbol.isConcatSpreadable;\r\n\r\n/**\r\n * Checks if `value` is a flattenable `arguments` object or array.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\r\n */\r\nfunction isFlattenable(value: any): value is Array<any> {\r\n    return isArray(value) || isArguments(value);\r\n}\r\n\r\nexport default isFlattenable;\r\n// import isArguments from \"../isArguments.js\";\r\n\r\n// /** Built-in value reference. */\r\n// const spreadableSymbol = Symbol.isConcatSpreadable;\r\n\r\n// /**\r\n//  * Checks if `value` is a flattenable `arguments` object or array.\r\n//  *\r\n//  * @private\r\n//  * @param {*} value The value to check.\r\n//  * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\r\n//  */\r\n// function isFlattenable(value) {\r\n//     return Array.isArray(value) || isArguments(value) || !!(value && value[spreadableSymbol]);\r\n// }\r\n\r\n// export default isFlattenable;\r\n","import { nativePush } from \"../basic/_global\";\r\nimport isFlattenable from \"./_isFlattenable\";\r\n\r\n/**\r\n * The base implementation of `flatten` with support for restricting flattening.\r\n *\r\n * @private\r\n * @param {Array} array The array to flatten.\r\n * @param {number} depth The maximum recursion depth.\r\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\r\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\r\n * @param {Array} [result=[]] The initial result value.\r\n * @returns {Array} Returns the new flattened array.\r\n */\r\nfunction baseFlatten<T>(array: NestedArray<T>, depth: number, predicate?: (value: NestedArray<T> | T) => boolean, isStrict?: boolean, result?: Array<FlatArray<T>>): Array<FlatArray<T>> {\r\n    predicate || (predicate = isFlattenable);\r\n    result || (result = []);\r\n\r\n    if (array == null) {\r\n        return result;\r\n    }\r\n\r\n    let index = -1,\r\n        length = array.length;\r\n\r\n    while (++index < length) {\r\n        const value = array[index];\r\n        if (depth > 0 && predicate(value)) {\r\n            if (depth > 1) {\r\n                // Recursively flatten arrays (susceptible to call stack limits).\r\n                baseFlatten(value as NestedArray<T> | Array<T>, depth - 1, predicate, isStrict, result);\r\n            } else {\r\n                nativePush.apply(result, value);\r\n            }\r\n        } else if (!isStrict) {\r\n            result[result.length] = value as FlatArray<T>;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default baseFlatten;\r\n// import isFlattenable from \"./isFlattenable.js\";\r\n\r\n// /**\r\n//  * The base implementation of `flatten` with support for restricting flattening.\r\n//  *\r\n//  * @private\r\n//  * @param {Array} array The array to flatten.\r\n//  * @param {number} depth The maximum recursion depth.\r\n//  * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\r\n//  * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\r\n//  * @param {Array} [result=[]] The initial result value.\r\n//  * @returns {Array} Returns the new flattened array.\r\n//  */\r\n// function baseFlatten(array, depth, predicate, isStrict, result) {\r\n//     predicate || (predicate = isFlattenable);\r\n//     result || (result = []);\r\n\r\n//     if (array == null) {\r\n//         return result;\r\n//     }\r\n\r\n//     for (const value of array) {\r\n//         if (depth > 0 && predicate(value)) {\r\n//             if (depth > 1) {\r\n//                 // Recursively flatten arrays (susceptible to call stack limits).\r\n//                 baseFlatten(value, depth - 1, predicate, isStrict, result);\r\n//             } else {\r\n//                 result.push(...value);\r\n//             }\r\n//         } else if (!isStrict) {\r\n//             result[result.length] = value;\r\n//         }\r\n//     }\r\n//     return result;\r\n// }\r\n\r\n// export default baseFlatten;\r\n","/**\r\n * Reduces `collection` to a value which is the accumulated result of running\r\n * each element in `collection` thru `iteratee`, where each successive\r\n * invocation is supplied the return value of the previous. If `accumulator`\r\n * is not given, the first element of `collection` is used as the initial\r\n * value. The iteratee is invoked with four arguments:\r\n * (accumulator, value, index|key, collection).\r\n *\r\n * Many lodash methods are guarded to work as iteratees for methods like\r\n * `reduce`, `reduceRight`, and `transform`.\r\n *\r\n * The guarded methods are:\r\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\r\n * and `sortBy`\r\n *\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @param {*} [accumulator] The initial value.\r\n * @returns {*} Returns the accumulated value.\r\n * @see reduceRight, transform\r\n * @example\r\n *\r\n * reduce([1, 2], (sum, n) => sum + n, 0)\r\n * // => 3\r\n *\r\n * reduce({ 'a': 1, 'b': 2, 'c': 1 }, (result, value, key) => {\r\n *   (result[value] || (result[value] = [])).push(key)\r\n *   return result\r\n * }, {})\r\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\r\n */\r\nfunction reduce<T>(array: Array<T>, reducer: Reducer<T, T>): T | undefined;\r\nfunction reduce<T, TResult>(array: Array<T>, reducer: Reducer<T, TResult>, initialValue: TResult): TResult;\r\nfunction reduce<T, TResult>(array: Array<T>, iteratee: Reducer<T, TResult>, initialValue?: TResult): TResult | undefined {\r\n    let length = array.length;\r\n    if (length === 0 && initialValue === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    let accumulator: TResult | T = initialValue === undefined ? array[0] : initialValue;\r\n    let startIndex = initialValue === undefined ? 0 : -1;\r\n    let currentIndex = startIndex;\r\n\r\n    while (++currentIndex < length) {\r\n        accumulator = iteratee(accumulator as TResult, array[currentIndex], currentIndex, array);\r\n    }\r\n    return accumulator as TResult;\r\n}\r\n\r\nexport default reduce;\r\n// import arrayReduce from \"./_internal/arrayReduce.js\";\r\n// import baseEach from \"./_internal/baseEach.js\";\r\n// import baseReduce from \"./_internal/baseReduce.js\";\r\n\r\n// /**\r\n//  * Reduces `collection` to a value which is the accumulated result of running\r\n//  * each element in `collection` thru `iteratee`, where each successive\r\n//  * invocation is supplied the return value of the previous. If `accumulator`\r\n//  * is not given, the first element of `collection` is used as the initial\r\n//  * value. The iteratee is invoked with four arguments:\r\n//  * (accumulator, value, index|key, collection).\r\n//  *\r\n//  * Many lodash methods are guarded to work as iteratees for methods like\r\n//  * `reduce`, `reduceRight`, and `transform`.\r\n//  *\r\n//  * The guarded methods are:\r\n//  * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\r\n//  * and `sortBy`\r\n//  *\r\n//  * @since 0.1.0\r\n//  * @category Collection\r\n//  * @param {Array|Object} collection The collection to iterate over.\r\n//  * @param {Function} iteratee The function invoked per iteration.\r\n//  * @param {*} [accumulator] The initial value.\r\n//  * @returns {*} Returns the accumulated value.\r\n//  * @see reduceRight, transform\r\n//  * @example\r\n//  *\r\n//  * reduce([1, 2], (sum, n) => sum + n, 0)\r\n//  * // => 3\r\n//  *\r\n//  * reduce({ 'a': 1, 'b': 2, 'c': 1 }, (result, value, key) => {\r\n//  *   (result[value] || (result[value] = [])).push(key)\r\n//  *   return result\r\n//  * }, {})\r\n//  * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\r\n//  */\r\n// function reduce(collection, iteratee, accumulator) {\r\n//     const func = Array.isArray(collection) ? arrayReduce : baseReduce;\r\n//     const initAccum = arguments.length < 3;\r\n//     return func(collection, iteratee, accumulator, initAccum, baseEach);\r\n// }\r\n\r\n// export default reduce;\r\n","/**\r\n * Iterates over elements of `array`, returning an array of all elements\r\n * `predicate` returns truthy for. The predicate is invoked with three\r\n * arguments: (value, index, array).\r\n *\r\n * **Note:** Unlike `remove`, this method returns a new array.\r\n *\r\n * @since 5.0.0\r\n * @category Array\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @returns {Array} Returns the new filtered array.\r\n * @see pull, pullAll, pullAllBy, pullAllWith, pullAt, remove, reject\r\n * @example\r\n *\r\n * const users = [\r\n *   { 'user': 'barney', 'active': true },\r\n *   { 'user': 'fred',   'active': false }\r\n * ]\r\n *\r\n * filter(users, ({ active }) => active)\r\n * // => objects for ['barney']\r\n */\r\nfunction filter<T, S extends T>(array: Array<T>, predicate: ArrayIteratorTypeGuard<T, S>): Array<S> {\r\n    let index = -1;\r\n    let resIndex = 0;\r\n    const length = array == null ? 0 : array.length;\r\n    const result = [];\r\n\r\n    while (++index < length) {\r\n        const value = array[index];\r\n        if (predicate(value, index, array)) {\r\n            result[resIndex++] = value;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default filter;\r\n// /**\r\n//  * Iterates over elements of `array`, returning an array of all elements\r\n//  * `predicate` returns truthy for. The predicate is invoked with three\r\n//  * arguments: (value, index, array).\r\n//  *\r\n//  * **Note:** Unlike `remove`, this method returns a new array.\r\n//  *\r\n//  * @since 5.0.0\r\n//  * @category Array\r\n//  * @param {Array} array The array to iterate over.\r\n//  * @param {Function} predicate The function invoked per iteration.\r\n//  * @returns {Array} Returns the new filtered array.\r\n//  * @see pull, pullAll, pullAllBy, pullAllWith, pullAt, remove, reject\r\n//  * @example\r\n//  *\r\n//  * const users = [\r\n//  *   { 'user': 'barney', 'active': true },\r\n//  *   { 'user': 'fred',   'active': false }\r\n//  * ]\r\n//  *\r\n//  * filter(users, ({ active }) => active)\r\n//  * // => objects for ['barney']\r\n//  */\r\n// function filter(array, predicate) {\r\n//     let index = -1;\r\n//     let resIndex = 0;\r\n//     const length = array == null ? 0 : array.length;\r\n//     const result = [];\r\n\r\n//     while (++index < length) {\r\n//         const value = array[index];\r\n//         if (predicate(value, index, array)) {\r\n//             result[resIndex++] = value;\r\n//         }\r\n//     }\r\n//     return result;\r\n// }\r\n\r\n// export default filter;\r\n","import { reFlags } from \"../basic/_global\";\r\n\r\n/** Used to match `RegExp` flags from their coerced string values. */\r\n// const reFlags = /\\w*$/;\r\n\r\n/**\r\n * Creates a clone of `regexp`.\r\n *\r\n * @private\r\n * @param {Object} regexp The regexp to clone.\r\n * @returns {Object} Returns the cloned regexp.\r\n */\r\nfunction cloneRegExp(regexp: RegExp): RegExp {\r\n    const matched = reFlags.exec(regexp.toString());\r\n    const flags = matched === null ? undefined : matched.toString();\r\n    const RegExpCtor = regexp.constructor as RegExpConstructor;\r\n    const result = new RegExpCtor(regexp.source, flags);\r\n    result.lastIndex = regexp.lastIndex;\r\n    return result;\r\n}\r\n\r\nexport default cloneRegExp;\r\n// /** Used to match `RegExp` flags from their coerced string values. */\r\n// const reFlags = /\\w*$/;\r\n\r\n// /**\r\n//  * Creates a clone of `regexp`.\r\n//  *\r\n//  * @private\r\n//  * @param {Object} regexp The regexp to clone.\r\n//  * @returns {Object} Returns the cloned regexp.\r\n//  */\r\n// function cloneRegExp(regexp) {\r\n//     const result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\r\n//     result.lastIndex = regexp.lastIndex;\r\n//     return result;\r\n// }\r\n\r\n// export default cloneRegExp;\r\n","/**\r\n * Copies the values of `source` to `array`.\r\n *\r\n * @private\r\n * @param {Array} source The array to copy values from.\r\n * @param {Array} [array=[]] The array to copy values to.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction copyArray<T>(source: ArrayLike<T> | Array<T>, array?: Array<any>): Array<T> {\r\n    let index = -1;\r\n    const length = source.length;\r\n\r\n    array || (array = new Array(length));\r\n    while (++index < length) {\r\n        array[index] = source[index];\r\n    }\r\n    return array;\r\n}\r\n\r\nexport default copyArray;\r\n// /**\r\n//  * Copies the values of `source` to `array`.\r\n//  *\r\n//  * @private\r\n//  * @param {Array} source The array to copy values from.\r\n//  * @param {Array} [array=[]] The array to copy values to.\r\n//  * @returns {Array} Returns `array`.\r\n//  */\r\n// function copyArray(source, array) {\r\n//     let index = -1;\r\n//     const length = source.length;\r\n\r\n//     array || (array = new Array(length));\r\n//     while (++index < length) {\r\n//         array[index] = source[index];\r\n//     }\r\n//     return array;\r\n// }\r\n\r\n// export default copyArray;\r\n","/**\r\n * Copies properties of `source` to `object`.\r\n *\r\n * @private\r\n * @param {Object} source The object to copy properties from.\r\n * @param {Array} props The property identifiers to copy.\r\n * @param {Object} [object={}] The object to copy properties to.\r\n * @param {Function} [customizer] The function to customize copied values.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction copyObject(source: Dictionary<any>, props: Array<string>, object?: Dictionary<any>): Dictionary<any> {\r\n    object || (object = {});\r\n\r\n    var index = -1,\r\n        length = props.length;\r\n\r\n    while (++index < length) {\r\n        var key = props[index];\r\n        object[key] = source[key];\r\n    }\r\n    return object;\r\n}\r\n\r\nexport default copyObject;\r\n// import assignValue from \"./assignValue.js\";\r\n// import baseAssignValue from \"./baseAssignValue.js\";\r\n\r\n// /**\r\n//  * Copies properties of `source` to `object`.\r\n//  *\r\n//  * @private\r\n//  * @param {Object} source The object to copy properties from.\r\n//  * @param {Array} props The property identifiers to copy.\r\n//  * @param {Object} [object={}] The object to copy properties to.\r\n//  * @param {Function} [customizer] The function to customize copied values.\r\n//  * @returns {Object} Returns `object`.\r\n//  */\r\n// function copyObject(source, props, object, customizer) {\r\n//     const isNew = !object;\r\n//     object || (object = {});\r\n\r\n//     for (const key of props) {\r\n//         let newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;\r\n\r\n//         if (newValue === undefined) {\r\n//             newValue = source[key];\r\n//         }\r\n//         if (isNew) {\r\n//             baseAssignValue(object, key, newValue);\r\n//         } else {\r\n//             assignValue(object, key, newValue);\r\n//         }\r\n//     }\r\n//     return object;\r\n// }\r\n\r\n// export default copyObject;\r\n","/**\r\n * Initializes an object clone.\r\n *\r\n * @private\r\n * @param {Object} object The object to clone.\r\n * @returns {Object} Returns the initialized clone.\r\n */\r\nfunction initCloneObject(object: object): object {\r\n    let Ctor = object.constructor as any;\r\n    return typeof Ctor == \"function\" && Ctor instanceof Ctor ? new Ctor() : {};\r\n}\r\n\r\nexport default initCloneObject;\r\n// import isPrototype from \"./isPrototype.js\";\r\n\r\n// /**\r\n//  * Initializes an object clone.\r\n//  *\r\n//  * @private\r\n//  * @param {Object} object The object to clone.\r\n//  * @returns {Object} Returns the initialized clone.\r\n//  */\r\n// function initCloneObject(object) {\r\n//     return typeof object.constructor === \"function\" && !isPrototype(object) ? Object.create(Object.getPrototypeOf(object)) : {};\r\n// }\r\n\r\n// export default initCloneObject;\r\n","import or from \"../basic/_or\";\r\nimport isArray from \"../basic/isArray\";\r\nimport arrayEach from \"./_arrayEach\";\r\nimport baseForOwn from \"./_baseForOwn\";\r\nimport cloneRegExp from \"./_cloneRegExp\";\r\nimport copyArray from \"./_copyArray\";\r\nimport copyObject from \"./_copyObject\";\r\nimport getTag from \"./_getTag\";\r\nimport initCloneObject from \"./_initCloneObject\";\r\nimport has from \"../#has\";\r\nimport isObject from \"../#isObject\";\r\nimport keys from \"../#keys\";\r\n\r\n/** `Object#toString` result references. */\r\nconst argsTag = \"[object Arguments]\";\r\nconst arrayTag = \"[object Array]\";\r\nconst boolTag = \"[object Boolean]\";\r\nconst dateTag = \"[object Date]\";\r\nconst errorTag = \"[object Error]\";\r\nconst numberTag = \"[object Number]\";\r\nconst objectTag = \"[object Object]\";\r\nconst regexpTag = \"[object RegExp]\";\r\nconst stringTag = \"[object String]\";\r\n\r\n/** Used to identify `toStringTag` values supported by `clone`. */\r\nconst cloneableTags: Dictionary<boolean> = {};\r\ncloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[stringTag] = true;\r\ncloneableTags[errorTag] = false;\r\n\r\n/**\r\n * Initializes an object clone based on its `toStringTag`.\r\n *\r\n * **Note:** This function only supports cloning values with tags of\r\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\r\n *\r\n * @private\r\n * @param {Object} object The object to clone.\r\n * @param {string} tag The `toStringTag` of the object to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the initialized clone.\r\n */\r\nfunction initCloneByTag(object: any, tag: string): object | undefined {\r\n    const Ctor = object.constructor;\r\n    switch (tag) {\r\n        case boolTag:\r\n        case dateTag:\r\n            return new Ctor(object.valueOf());\r\n        case numberTag:\r\n        case stringTag:\r\n            return new Ctor(object);\r\n        case regexpTag:\r\n            return cloneRegExp(object);\r\n    }\r\n}\r\n\r\nfunction isRegExpExecArray(array: Array<any>): array is RegExpExecArray {\r\n    return typeof array[0] === \"string\" && has(array, \"index\");\r\n}\r\n\r\nfunction initCloneArray(array: Array<any> | RegExpExecArray): Array<any> | RegExpExecArray {\r\n    const length = array.length;\r\n    const Ctor = array.constructor as ArrayConstructor;\r\n    const result = new Ctor(length);\r\n    if (length && isRegExpExecArray(array)) {\r\n        (result as RegExpExecArray).index = array.index;\r\n        (result as RegExpExecArray).input = array.input;\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * The base implementation of `clone` and `cloneDeep` which tracks\r\n * traversed objects.\r\n *\r\n * @private\r\n * @param {*} value The value to clone.\r\n * @param {number} bitmask The bitmask flags.\r\n *  1 - Deep clone\r\n *  2 - Flatten inherited properties\r\n *  4 - Clone symbols\r\n * @param {Function} [customizer] The function to customize cloning.\r\n * @param {string} [key] The key of `value`.\r\n * @param {Object} [object] The parent object of `value`.\r\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\r\n * @returns {*} Returns the cloned value.\r\n */\r\n\r\nfunction baseClone(value: any, isDeep: boolean, customizer?: (value: any, key?: PropertyName, object?: any) => any, key?: PropertyName, object?: any, stackA?: Array<any>, stackB?: Array<any>): any {\r\n    let result: any;\r\n    if (customizer) {\r\n        result = object ? customizer(value, key, object) : customizer(value);\r\n    }\r\n    if (result !== undefined) {\r\n        return result;\r\n    }\r\n    if (!isObject(value)) {\r\n        return value;\r\n    }\r\n    const isArr = isArray(value);\r\n    const tag = getTag(value);\r\n    if (isArr) {\r\n        result = initCloneArray(value);\r\n        if (!isDeep) {\r\n            return copyArray(value, result);\r\n        }\r\n    } else {\r\n        const isFunc = typeof value === \"function\";\r\n        if (or(tag == objectTag, tag == argsTag, isFunc && !object)) {\r\n            result = isFunc ? {} : initCloneObject(value);\r\n            if (!isDeep) {\r\n                return copyObject(value, keys(value), result);\r\n            }\r\n        } else {\r\n            return cloneableTags[tag] ? initCloneByTag(value, tag) : object ? value : {};\r\n        }\r\n    }\r\n    // Check for circular references and return its corresponding clone.\r\n    stackA || (stackA = []);\r\n    stackB || (stackB = []);\r\n\r\n    let length = stackA.length;\r\n    while (length--) {\r\n        if (stackA[length] == value) {\r\n            return stackB[length];\r\n        }\r\n    }\r\n    // Add the source value to the stack of traversed objects and associate it with its clone.\r\n    stackA.push(value);\r\n    stackB.push(result);\r\n\r\n    // Recursively populate clone (susceptible to call stack limits).\r\n\r\n    if (isArr) {\r\n        arrayEach(value, function (subValue, key) {\r\n            result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\r\n        });\r\n    } else {\r\n        baseForOwn(value, function (subValue, key) {\r\n            result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\r\n        });\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default baseClone;\r\n// import Stack from \"./Stack.js\";\r\n// import arrayEach from \"./arrayEach.js\";\r\n// import assignValue from \"./assignValue.js\";\r\n// import cloneBuffer from \"./cloneBuffer.js\";\r\n// import copyArray from \"./copyArray.js\";\r\n// import copyObject from \"./copyObject.js\";\r\n// import cloneArrayBuffer from \"./cloneArrayBuffer.js\";\r\n// import cloneDataView from \"./cloneDataView.js\";\r\n// import cloneRegExp from \"./cloneRegExp.js\";\r\n// import cloneSymbol from \"./cloneSymbol.js\";\r\n// import cloneTypedArray from \"./cloneTypedArray.js\";\r\n// import copySymbols from \"./copySymbols.js\";\r\n// import copySymbolsIn from \"./copySymbolsIn.js\";\r\n// import getAllKeys from \"./getAllKeys.js\";\r\n// import getAllKeysIn from \"./getAllKeysIn.js\";\r\n// import getTag from \"./getTag.js\";\r\n// import initCloneObject from \"./initCloneObject.js\";\r\n// import isBuffer from \"../isBuffer.js\";\r\n// import isObject from \"../isObject.js\";\r\n// import isTypedArray from \"../isTypedArray.js\";\r\n// import keys from \"../keys.js\";\r\n// import keysIn from \"../keysIn.js\";\r\n\r\n// /** Used to compose bitmasks for cloning. */\r\n// const CLONE_DEEP_FLAG = 1;\r\n// const CLONE_FLAT_FLAG = 2;\r\n// const CLONE_SYMBOLS_FLAG = 4;\r\n\r\n// /** `Object#toString` result references. */\r\n// const argsTag = \"[object Arguments]\";\r\n// const arrayTag = \"[object Array]\";\r\n// const boolTag = \"[object Boolean]\";\r\n// const dateTag = \"[object Date]\";\r\n// const errorTag = \"[object Error]\";\r\n// const mapTag = \"[object Map]\";\r\n// const numberTag = \"[object Number]\";\r\n// const objectTag = \"[object Object]\";\r\n// const regexpTag = \"[object RegExp]\";\r\n// const setTag = \"[object Set]\";\r\n// const stringTag = \"[object String]\";\r\n// const symbolTag = \"[object Symbol]\";\r\n// const weakMapTag = \"[object WeakMap]\";\r\n\r\n// const arrayBufferTag = \"[object ArrayBuffer]\";\r\n// const dataViewTag = \"[object DataView]\";\r\n// const float32Tag = \"[object Float32Array]\";\r\n// const float64Tag = \"[object Float64Array]\";\r\n// const int8Tag = \"[object Int8Array]\";\r\n// const int16Tag = \"[object Int16Array]\";\r\n// const int32Tag = \"[object Int32Array]\";\r\n// const uint8Tag = \"[object Uint8Array]\";\r\n// const uint8ClampedTag = \"[object Uint8ClampedArray]\";\r\n// const uint16Tag = \"[object Uint16Array]\";\r\n// const uint32Tag = \"[object Uint32Array]\";\r\n\r\n// /** Used to identify `toStringTag` values supported by `clone`. */\r\n// const cloneableTags = {};\r\n// cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\r\n// cloneableTags[errorTag] = cloneableTags[weakMapTag] = false;\r\n\r\n// /** Used to check objects for own properties. */\r\n// const hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n// /**\r\n//  * Initializes an object clone based on its `toStringTag`.\r\n//  *\r\n//  * **Note:** This function only supports cloning values with tags of\r\n//  * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\r\n//  *\r\n//  * @private\r\n//  * @param {Object} object The object to clone.\r\n//  * @param {string} tag The `toStringTag` of the object to clone.\r\n//  * @param {boolean} [isDeep] Specify a deep clone.\r\n//  * @returns {Object} Returns the initialized clone.\r\n//  */\r\n// function initCloneByTag(object, tag, isDeep) {\r\n//     const Ctor = object.constructor;\r\n//     switch (tag) {\r\n//         case arrayBufferTag:\r\n//             return cloneArrayBuffer(object);\r\n\r\n//         case boolTag:\r\n//         case dateTag:\r\n//             return new Ctor(+object);\r\n\r\n//         case dataViewTag:\r\n//             return cloneDataView(object, isDeep);\r\n\r\n//         case float32Tag:\r\n//         case float64Tag:\r\n//         case int8Tag:\r\n//         case int16Tag:\r\n//         case int32Tag:\r\n//         case uint8Tag:\r\n//         case uint8ClampedTag:\r\n//         case uint16Tag:\r\n//         case uint32Tag:\r\n//             return cloneTypedArray(object, isDeep);\r\n\r\n//         case mapTag:\r\n//             return new Ctor();\r\n\r\n//         case numberTag:\r\n//         case stringTag:\r\n//             return new Ctor(object);\r\n\r\n//         case regexpTag:\r\n//             return cloneRegExp(object);\r\n\r\n//         case setTag:\r\n//             return new Ctor();\r\n\r\n//         case symbolTag:\r\n//             return cloneSymbol(object);\r\n//     }\r\n// }\r\n\r\n// /**\r\n//  * Initializes an array clone.\r\n//  *\r\n//  * @private\r\n//  * @param {Array} array The array to clone.\r\n//  * @returns {Array} Returns the initialized clone.\r\n//  */\r\n// function initCloneArray(array) {\r\n//     const { length } = array;\r\n//     const result = new array.constructor(length);\r\n\r\n//     // Add properties assigned by `RegExp#exec`.\r\n//     if (length && typeof array[0] === \"string\" && hasOwnProperty.call(array, \"index\")) {\r\n//         result.index = array.index;\r\n//         result.input = array.input;\r\n//     }\r\n//     return result;\r\n// }\r\n\r\n// /**\r\n//  * The base implementation of `clone` and `cloneDeep` which tracks\r\n//  * traversed objects.\r\n//  *\r\n//  * @private\r\n//  * @param {*} value The value to clone.\r\n//  * @param {number} bitmask The bitmask flags.\r\n//  *  1 - Deep clone\r\n//  *  2 - Flatten inherited properties\r\n//  *  4 - Clone symbols\r\n//  * @param {Function} [customizer] The function to customize cloning.\r\n//  * @param {string} [key] The key of `value`.\r\n//  * @param {Object} [object] The parent object of `value`.\r\n//  * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\r\n//  * @returns {*} Returns the cloned value.\r\n//  */\r\n// function baseClone(value, bitmask, customizer, key, object, stack) {\r\n//     let result;\r\n//     const isDeep = bitmask & CLONE_DEEP_FLAG;\r\n//     const isFlat = bitmask & CLONE_FLAT_FLAG;\r\n//     const isFull = bitmask & CLONE_SYMBOLS_FLAG;\r\n\r\n//     if (customizer) {\r\n//         result = object ? customizer(value, key, object, stack) : customizer(value);\r\n//     }\r\n//     if (result !== undefined) {\r\n//         return result;\r\n//     }\r\n//     if (!isObject(value)) {\r\n//         return value;\r\n//     }\r\n//     const isArr = Array.isArray(value);\r\n//     const tag = getTag(value);\r\n//     if (isArr) {\r\n//         result = initCloneArray(value);\r\n//         if (!isDeep) {\r\n//             return copyArray(value, result);\r\n//         }\r\n//     } else {\r\n//         const isFunc = typeof value === \"function\";\r\n\r\n//         if (isBuffer(value)) {\r\n//             return cloneBuffer(value, isDeep);\r\n//         }\r\n//         if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\r\n//             result = isFlat || isFunc ? {} : initCloneObject(value);\r\n//             if (!isDeep) {\r\n//                 return isFlat ? copySymbolsIn(value, copyObject(value, keysIn(value), result)) : copySymbols(value, Object.assign(result, value));\r\n//             }\r\n//         } else {\r\n//             if (isFunc || !cloneableTags[tag]) {\r\n//                 return object ? value : {};\r\n//             }\r\n//             result = initCloneByTag(value, tag, isDeep);\r\n//         }\r\n//     }\r\n//     // Check for circular references and return its corresponding clone.\r\n//     stack || (stack = new Stack());\r\n//     const stacked = stack.get(value);\r\n//     if (stacked) {\r\n//         return stacked;\r\n//     }\r\n//     stack.set(value, result);\r\n\r\n//     if (tag == mapTag) {\r\n//         value.forEach((subValue, key) => {\r\n//             result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\r\n//         });\r\n//         return result;\r\n//     }\r\n\r\n//     if (tag == setTag) {\r\n//         value.forEach(subValue => {\r\n//             result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\r\n//         });\r\n//         return result;\r\n//     }\r\n\r\n//     if (isTypedArray(value)) {\r\n//         return result;\r\n//     }\r\n\r\n//     const keysFunc = isFull ? (isFlat ? getAllKeysIn : getAllKeys) : isFlat ? keysIn : keys;\r\n\r\n//     const props = isArr ? undefined : keysFunc(value);\r\n//     arrayEach(props || value, (subValue, key) => {\r\n//         if (props) {\r\n//             key = subValue;\r\n//             subValue = value[key];\r\n//         }\r\n//         // Recursively populate clone (susceptible to call stack limits).\r\n//         assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\r\n//     });\r\n//     return result;\r\n// }\r\n\r\n// export default baseClone;\r\n","import baseClone from \"./_internal/_baseClone\";\r\n\r\n/**\r\n * Creates a shallow clone of `value`.\r\n *\r\n * **Note:** This method is loosely based on the\r\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\r\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\r\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\r\n * arrays. The own enumerable properties of `arguments` objects are cloned\r\n * as plain objects. Object inheritance is preserved. An empty object is\r\n * returned for uncloneable values such as error objects, functions, DOM nodes,\r\n * and WeakMaps.\r\n *\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to clone.\r\n * @returns {*} Returns the cloned value.\r\n * @see cloneDeep\r\n * @example\r\n *\r\n * const objects = [{ 'a': 1 }, { 'b': 2 }]\r\n *\r\n * const shallow = clone(objects)\r\n * console.log(shallow[0] === objects[0])\r\n * // => true\r\n */\r\nfunction clone<T>(value: T): T {\r\n    return baseClone(value, false);\r\n}\r\n\r\nexport default clone;\r\n// import baseClone from \"./_internal/baseClone.js\";\r\n\r\n// /** Used to compose bitmasks for cloning. */\r\n// const CLONE_SYMBOLS_FLAG = 4;\r\n\r\n// /**\r\n//  * Creates a shallow clone of `value`.\r\n//  *\r\n//  * **Note:** This method is loosely based on the\r\n//  * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\r\n//  * and supports cloning arrays, array buffers, booleans, date objects, maps,\r\n//  * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\r\n//  * arrays. The own enumerable properties of `arguments` objects are cloned\r\n//  * as plain objects. Object inheritance is preserved. An empty object is\r\n//  * returned for uncloneable values such as error objects, functions, DOM nodes,\r\n//  * and WeakMaps.\r\n//  *\r\n//  * @since 0.1.0\r\n//  * @category Lang\r\n//  * @param {*} value The value to clone.\r\n//  * @returns {*} Returns the cloned value.\r\n//  * @see cloneDeep\r\n//  * @example\r\n//  *\r\n//  * const objects = [{ 'a': 1 }, { 'b': 2 }]\r\n//  *\r\n//  * const shallow = clone(objects)\r\n//  * console.log(shallow[0] === objects[0])\r\n//  * // => true\r\n//  */\r\n// function clone(value) {\r\n//     return baseClone(value, CLONE_SYMBOLS_FLAG);\r\n// }\r\n\r\n// export default clone;\r\n","/**\r\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\r\n * The iteratee is invoked with three arguments: (value, index|key, collection).\r\n * Iteratee functions may exit iteration early by explicitly returning `false`.\r\n *\r\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\r\n * property are iterated like arrays. To avoid this behavior use `forIn`\r\n * or `forOwn` for object iteration.\r\n *\r\n * @since 0.1.0\r\n * @alias each\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array|Object} Returns `collection`.\r\n * @see forEachRight, forIn, forInRight, forOwn, forOwnRight\r\n * @example\r\n *\r\n * forEach([1, 2], value => console.log(value))\r\n * // => Logs `1` then `2`.\r\n *\r\n * forEach({ 'a': 1, 'b': 2 }, (value, key) => console.log(key))\r\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\r\n */\r\nfunction forEach<T>(array: Array<T>, iteratee: ArrayIterator<T, boolean | void>): Array<T> {\r\n    let index = -1;\r\n    const length = array.length;\r\n\r\n    while (++index < length) {\r\n        if (iteratee(array[index], index, array) === false) {\r\n            break;\r\n        }\r\n    }\r\n    return array;\r\n}\r\n\r\nexport default forEach;\r\n// import arrayEach from \"./_internal/arrayEach.js\";\r\n// import baseEach from \"./_internal/baseEach.js\";\r\n\r\n// /**\r\n//  * Iterates over elements of `collection` and invokes `iteratee` for each element.\r\n//  * The iteratee is invoked with three arguments: (value, index|key, collection).\r\n//  * Iteratee functions may exit iteration early by explicitly returning `false`.\r\n//  *\r\n//  * **Note:** As with other \"Collections\" methods, objects with a \"length\"\r\n//  * property are iterated like arrays. To avoid this behavior use `forIn`\r\n//  * or `forOwn` for object iteration.\r\n//  *\r\n//  * @since 0.1.0\r\n//  * @alias each\r\n//  * @category Collection\r\n//  * @param {Array|Object} collection The collection to iterate over.\r\n//  * @param {Function} iteratee The function invoked per iteration.\r\n//  * @returns {Array|Object} Returns `collection`.\r\n//  * @see forEachRight, forIn, forInRight, forOwn, forOwnRight\r\n//  * @example\r\n//  *\r\n//  * forEach([1, 2], value => console.log(value))\r\n//  * // => Logs `1` then `2`.\r\n//  *\r\n//  * forEach({ 'a': 1, 'b': 2 }, (value, key) => console.log(key))\r\n//  * // => Logs 'a' then 'b' (iteration order is not guaranteed).\r\n//  */\r\n// function forEach(collection, iteratee) {\r\n//     const func = Array.isArray(collection) ? arrayEach : baseEach;\r\n//     return func(collection, iteratee);\r\n// }\r\n\r\n// export default forEach;\r\n","/**\r\n * The base implementation of `findIndex` and `findLastIndex`.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @param {number} fromIndex The index to search from.\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction baseFindIndex<T>(array: Array<T>, predicate: ListIterator<T, boolean>, fromIndex: number, fromRight?: boolean): number {\r\n    const length = array.length;\r\n    let index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n    while (fromRight ? index-- : ++index < length) {\r\n        if (predicate(array[index], index, array)) {\r\n            return index;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport default baseFindIndex;\r\n// /**\r\n//  * The base implementation of `findIndex` and `findLastIndex`.\r\n//  *\r\n//  * @private\r\n//  * @param {Array} array The array to inspect.\r\n//  * @param {Function} predicate The function invoked per iteration.\r\n//  * @param {number} fromIndex The index to search from.\r\n//  * @param {boolean} [fromRight] Specify iterating from right to left.\r\n//  * @returns {number} Returns the index of the matched value, else `-1`.\r\n//  */\r\n// function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n//     const { length } = array;\r\n//     let index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n//     while (fromRight ? index-- : ++index < length) {\r\n//         if (predicate(array[index], index, array)) {\r\n//             return index;\r\n//         }\r\n//     }\r\n//     return -1;\r\n// }\r\n\r\n// export default baseFindIndex;\r\n","/**\r\n * The base implementation of `isNaN` without support for number objects.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n */\r\nfunction baseIsNaN(value: any): value is number {\r\n    return value !== value;\r\n}\r\n\r\nexport default baseIsNaN;\r\n// /**\r\n//  * The base implementation of `isNaN` without support for number objects.\r\n//  *\r\n//  * @private\r\n//  * @param {*} value The value to check.\r\n//  * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n//  */\r\n// function baseIsNaN(value) {\r\n//     return value !== value;\r\n// }\r\n\r\n// export default baseIsNaN;\r\n","/**\r\n * A specialized version of `indexOf` which performs strict equality\r\n * comparisons of values, i.e. `===`.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} value The value to search for.\r\n * @param {number} fromIndex The index to search from.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction strictIndexOf<T>(array: Array<T>, value: T, fromIndex: number): number {\r\n    let index = fromIndex - 1;\r\n    const length = array.length;\r\n\r\n    while (++index < length) {\r\n        if (array[index] === value) {\r\n            return index;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport default strictIndexOf;\r\n// /**\r\n//  * A specialized version of `indexOf` which performs strict equality\r\n//  * comparisons of values, i.e. `===`.\r\n//  *\r\n//  * @private\r\n//  * @param {Array} array The array to inspect.\r\n//  * @param {*} value The value to search for.\r\n//  * @param {number} fromIndex The index to search from.\r\n//  * @returns {number} Returns the index of the matched value, else `-1`.\r\n//  */\r\n// function strictIndexOf(array, value, fromIndex) {\r\n//     let index = fromIndex - 1;\r\n//     const { length } = array;\r\n\r\n//     while (++index < length) {\r\n//         if (array[index] === value) {\r\n//             return index;\r\n//         }\r\n//     }\r\n//     return -1;\r\n// }\r\n\r\n// export default strictIndexOf;\r\n","import baseFindIndex from \"./_baseFindIndex\";\r\nimport baseIsNaN from \"./_baseIsNaN\";\r\nimport strictIndexOf from \"./_strictIndexOf\";\r\n\r\n/**\r\n * The base implementation of `indexOf` without `fromIndex` bounds checks.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} value The value to search for.\r\n * @param {number} fromIndex The index to search from.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction baseIndexOf<T>(array: Array<T>, value: any, fromIndex: number): number {\r\n    return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);\r\n}\r\n\r\nexport default baseIndexOf;\r\n// import baseFindIndex from \"./baseFindIndex.js\";\r\n// import baseIsNaN from \"./baseIsNaN.js\";\r\n// import strictIndexOf from \"./strictIndexOf.js\";\r\n\r\n// /**\r\n//  * The base implementation of `indexOf` without `fromIndex` bounds checks.\r\n//  *\r\n//  * @private\r\n//  * @param {Array} array The array to inspect.\r\n//  * @param {*} value The value to search for.\r\n//  * @param {number} fromIndex The index to search from.\r\n//  * @returns {number} Returns the index of the matched value, else `-1`.\r\n//  */\r\n// function baseIndexOf(array, value, fromIndex) {\r\n//     return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);\r\n// }\r\n\r\n// export default baseIndexOf;\r\n","import baseIndexOf from \"./_baseIndexOf\";\r\n\r\n/**\r\n * A specialized version of `includes` for arrays without support for\r\n * specifying an index to search from.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to inspect.\r\n * @param {*} target The value to search for.\r\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\r\n */\r\nfunction arrayIncludes<T>(array: Array<T>, value: any): boolean {\r\n    const length = array == null ? 0 : array.length;\r\n    return !!length && baseIndexOf(array, value, 0) > -1;\r\n}\r\n\r\nexport default arrayIncludes;\r\n// import baseIndexOf from \"./baseIndexOf.js\";\r\n\r\n// /**\r\n//  * A specialized version of `includes` for arrays without support for\r\n//  * specifying an index to search from.\r\n//  *\r\n//  * @private\r\n//  * @param {Array} [array] The array to inspect.\r\n//  * @param {*} target The value to search for.\r\n//  * @returns {boolean} Returns `true` if `target` is found, else `false`.\r\n//  */\r\n// function arrayIncludes(array, value) {\r\n//     const length = array == null ? 0 : array.length;\r\n//     return !!length && baseIndexOf(array, value, 0) > -1;\r\n// }\r\n","/**\r\n * Checks if `predicate` returns truthy for **any** element of `array`.\r\n * Iteration is stopped once `predicate` returns truthy. The predicate is\r\n * invoked with three arguments: (value, index, array).\r\n *\r\n * @since 5.0.0\r\n * @category Array\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @returns {boolean} Returns `true` if any element passes the predicate check,\r\n *  else `false`.\r\n * @example\r\n *\r\n * some([null, 0, 'yes', false], Boolean)\r\n * // => true\r\n */\r\nfunction some<T>(array: Array<T>, predicate: ListIterator<T, boolean>): boolean {\r\n    let index = -1;\r\n    const length = array.length;\r\n\r\n    while (++index < length) {\r\n        if (predicate(array[index], index, array)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport default some;\r\n// /**\r\n//  * Checks if `predicate` returns truthy for **any** element of `array`.\r\n//  * Iteration is stopped once `predicate` returns truthy. The predicate is\r\n//  * invoked with three arguments: (value, index, array).\r\n//  *\r\n//  * @since 5.0.0\r\n//  * @category Array\r\n//  * @param {Array} array The array to iterate over.\r\n//  * @param {Function} predicate The function invoked per iteration.\r\n//  * @returns {boolean} Returns `true` if any element passes the predicate check,\r\n//  *  else `false`.\r\n//  * @example\r\n//  *\r\n//  * some([null, 0, 'yes', false], Boolean)\r\n//  * // => true\r\n//  */\r\n// function some(array, predicate) {\r\n//     let index = -1;\r\n//     const length = array == null ? 0 : array.length;\r\n\r\n//     while (++index < length) {\r\n//         if (predicate(array[index], index, array)) {\r\n//             return true;\r\n//         }\r\n//     }\r\n//     return false;\r\n// }\r\n\r\n// export default some;\r\n","import baseFlatten from \"./_internal/_baseFlatten\";\r\nimport map from \"./#map\";\r\n\r\n/**\r\n * Creates a flattened array of values by running each element in `collection`\r\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\r\n * with three arguments: (value, index|key, collection).\r\n *\r\n * @since 4.0.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns the new flattened array.\r\n * @see flatMapDeep, flatMapDepth, flatten, flattenDeep, flattenDepth, map, mapKeys, mapValues\r\n * @example\r\n *\r\n * function duplicate(n) {\r\n *   return [n, n]\r\n * }\r\n *\r\n * flatMap([1, 2], duplicate)\r\n * // => [1, 1, 2, 2]\r\n */\r\nfunction flatMap<T, TResult>(collection: Array<T>, iteratee: ListIterator<T, Many<TResult>>): Array<TResult> {\r\n    return baseFlatten(map(collection, iteratee), 1);\r\n}\r\n\r\nexport default flatMap;\r\n// import baseFlatten from \"./_internal/baseFlatten.js\";\r\n// import map from \"./map.js\";\r\n\r\n// /**\r\n//  * Creates a flattened array of values by running each element in `collection`\r\n//  * thru `iteratee` and flattening the mapped results. The iteratee is invoked\r\n//  * with three arguments: (value, index|key, collection).\r\n//  *\r\n//  * @since 4.0.0\r\n//  * @category Collection\r\n//  * @param {Array|Object} collection The collection to iterate over.\r\n//  * @param {Function} iteratee The function invoked per iteration.\r\n//  * @returns {Array} Returns the new flattened array.\r\n//  * @see flatMapDeep, flatMapDepth, flatten, flattenDeep, flattenDepth, map, mapKeys, mapValues\r\n//  * @example\r\n//  *\r\n//  * function duplicate(n) {\r\n//  *   return [n, n]\r\n//  * }\r\n//  *\r\n//  * flatMap([1, 2], duplicate)\r\n//  * // => [1, 1, 2, 2]\r\n//  */\r\n// function flatMap(collection, iteratee) {\r\n//     return baseFlatten(map(collection, iteratee), 1);\r\n// }\r\n\r\n// export default flatMap;\r\n","import has from \"./#has\";\r\n\r\n/**\r\n * Iterates over own enumerable string keyed properties of an object and\r\n * invokes `iteratee` for each property. The iteratee is invoked with three\r\n * arguments: (value, key, object). Iteratee functions may exit iteration\r\n * early by explicitly returning `false`.\r\n *\r\n * @since 0.3.0\r\n * @category Object\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @see forEach, forEachRight, forIn, forInRight, forOwnRight\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1\r\n *   this.b = 2\r\n * }\r\n *\r\n * Foo.prototype.c = 3\r\n *\r\n * forOwn(new Foo, function(value, key) {\r\n *   console.log(key)\r\n * })\r\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\r\n */\r\nfunction forOwn<T>(object: T, iteratee: ObjectIterator<T, boolean | void>): T {\r\n    for (const key in object) {\r\n        if (has(object, key)) {\r\n            if (iteratee(object[key], key, object) === false) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return object;\r\n}\r\n\r\nexport default forOwn;\r\n// /**\r\n//  * Iterates over own enumerable string keyed properties of an object and\r\n//  * invokes `iteratee` for each property. The iteratee is invoked with three\r\n//  * arguments: (value, key, object). Iteratee functions may exit iteration\r\n//  * early by explicitly returning `false`.\r\n//  *\r\n//  * @since 0.3.0\r\n//  * @category Object\r\n//  * @param {Object} object The object to iterate over.\r\n//  * @param {Function} iteratee The function invoked per iteration.\r\n//  * @see forEach, forEachRight, forIn, forInRight, forOwnRight\r\n//  * @example\r\n//  *\r\n//  * function Foo() {\r\n//  *   this.a = 1\r\n//  *   this.b = 2\r\n//  * }\r\n//  *\r\n//  * Foo.prototype.c = 3\r\n//  *\r\n//  * forOwn(new Foo, function(value, key) {\r\n//  *   console.log(key)\r\n//  * })\r\n//  * // => Logs 'a' then 'b' (iteration order is not guaranteed).\r\n//  */\r\n// function forOwn(object, iteratee) {\r\n//     object = Object(object);\r\n//     Object.keys(object).forEach(key => iteratee(object[key], key, object));\r\n// }\r\n\r\n// export default forOwn;\r\n","/**\r\n * Checks if `value` is `null` or `undefined`.\r\n *\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\r\n * @example\r\n *\r\n * isNil(null)\r\n * // => true\r\n *\r\n * isNil(void 0)\r\n * // => true\r\n *\r\n * isNil(NaN)\r\n * // => false\r\n */\r\nfunction isNil(value: any): value is null | undefined {\r\n    return value == null;\r\n}\r\n\r\nexport default isNil;\r\n// /**\r\n//  * Checks if `value` is `null` or `undefined`.\r\n//  *\r\n//  * @since 4.0.0\r\n//  * @category Lang\r\n//  * @param {*} value The value to check.\r\n//  * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\r\n//  * @example\r\n//  *\r\n//  * isNil(null)\r\n//  * // => true\r\n//  *\r\n//  * isNil(void 0)\r\n//  * // => true\r\n//  *\r\n//  * isNil(NaN)\r\n//  * // => false\r\n//  */\r\n// function isNil(value) {\r\n//     return value == null;\r\n// }\r\n\r\n// export default isNil;\r\n","/**\r\n * Checks if `value` is `null`.\r\n *\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\r\n * @example\r\n *\r\n * isNull(null)\r\n * // => true\r\n *\r\n * isNull(void 0)\r\n * // => false\r\n */\r\nfunction isNull(value: any): value is null {\r\n    return value === null;\r\n}\r\n\r\nexport default isNull;\r\n// /**\r\n//  * Checks if `value` is `null`.\r\n//  *\r\n//  * @since 0.1.0\r\n//  * @category Lang\r\n//  * @param {*} value The value to check.\r\n//  * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\r\n//  * @example\r\n//  *\r\n//  * isNull(null)\r\n//  * // => true\r\n//  *\r\n//  * isNull(void 0)\r\n//  * // => false\r\n//  */\r\n// function isNull(value) {\r\n//     return value === null;\r\n// }\r\n\r\n// export default isNull;\r\n","import arrayIncludes from \"./_arrayIncludes\";\r\nimport arrayIncludesWith from \"./_arrayIncludesWith\";\r\nimport isFunction from \"../#isFunction\";\r\n\r\n/** Used as the size to enable large array optimizations. */\r\n// const LARGE_ARRAY_SIZE = 200;\r\n\r\n/**\r\n * The base implementation of `uniqBy`.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {Function} [iteratee] The iteratee invoked per element.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new duplicate free array.\r\n */\r\n\r\nfunction baseUniq<T, S extends T>(array: Array<T>, iteratee?: (value: T) => S, comparator?: (value: S) => any): Array<T> {\r\n    let index = -1;\r\n    let includes: any = arrayIncludes;\r\n    let isCommon = true;\r\n    let result: Array<T> = [];\r\n    let seen = result;\r\n\r\n    const hasIteratee = isFunction(iteratee);\r\n    const hasComparator = isFunction(comparator);\r\n    const length = array.length;\r\n\r\n    if (hasComparator) {\r\n        isCommon = false;\r\n        includes = arrayIncludesWith;\r\n    } else {\r\n        seen = hasIteratee ? [] : result;\r\n    }\r\n    outer: while (++index < length) {\r\n        let value = array[index];\r\n        const computed = hasIteratee ? iteratee(value) : value;\r\n\r\n        value = (hasComparator || value !== 0 ? value : 0) as T;\r\n        if (isCommon && computed === computed) {\r\n            let seenIndex = seen.length;\r\n            while (seenIndex--) {\r\n                if (seen[seenIndex] === computed) {\r\n                    continue outer;\r\n                }\r\n            }\r\n            if (hasIteratee) {\r\n                seen.push(computed);\r\n            }\r\n            result.push(value);\r\n        } else if (!includes(seen, computed, comparator)) {\r\n            if (seen !== result) {\r\n                seen.push(computed);\r\n            }\r\n            result.push(value);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default baseUniq;\r\n// import SetCache from \"./SetCache.js\";\r\n// import arrayIncludes from \"./arrayIncludes.js\";\r\n// import arrayIncludesWith from \"./arrayIncludesWith.js\";\r\n// import cacheHas from \"./cacheHas.js\";\r\n// import createSet from \"./createSet.js\";\r\n// import setToArray from \"./setToArray.js\";\r\n\r\n// /** Used as the size to enable large array optimizations. */\r\n// const LARGE_ARRAY_SIZE = 200;\r\n\r\n// /**\r\n//  * The base implementation of `uniqBy`.\r\n//  *\r\n//  * @private\r\n//  * @param {Array} array The array to inspect.\r\n//  * @param {Function} [iteratee] The iteratee invoked per element.\r\n//  * @param {Function} [comparator] The comparator invoked per element.\r\n//  * @returns {Array} Returns the new duplicate free array.\r\n//  */\r\n// function baseUniq(array, iteratee, comparator) {\r\n//     let index = -1;\r\n//     let includes = arrayIncludes;\r\n//     let isCommon = true;\r\n\r\n//     const { length } = array;\r\n//     const result = [];\r\n//     let seen = result;\r\n\r\n//     if (comparator) {\r\n//         isCommon = false;\r\n//         includes = arrayIncludesWith;\r\n//     } else if (length >= LARGE_ARRAY_SIZE) {\r\n//         const set = iteratee ? null : createSet(array);\r\n//         if (set) {\r\n//             return setToArray(set);\r\n//         }\r\n//         isCommon = false;\r\n//         includes = cacheHas;\r\n//         seen = new SetCache();\r\n//     } else {\r\n//         seen = iteratee ? [] : result;\r\n//     }\r\n//     outer: while (++index < length) {\r\n//         let value = array[index];\r\n//         const computed = iteratee ? iteratee(value) : value;\r\n\r\n//         value = comparator || value !== 0 ? value : 0;\r\n//         if (isCommon && computed === computed) {\r\n//             let seenIndex = seen.length;\r\n//             while (seenIndex--) {\r\n//                 if (seen[seenIndex] === computed) {\r\n//                     continue outer;\r\n//                 }\r\n//             }\r\n//             if (iteratee) {\r\n//                 seen.push(computed);\r\n//             }\r\n//             result.push(value);\r\n//         } else if (!includes(seen, computed, comparator)) {\r\n//             if (seen !== result) {\r\n//                 seen.push(computed);\r\n//             }\r\n//             result.push(value);\r\n//         }\r\n//     }\r\n//     return result;\r\n// }\r\n\r\n// export default baseUniq;\r\n","import baseUniq from \"./_internal/_baseUniq\";\r\n\r\n/**\r\n * Creates a duplicate-free version of an array, using\r\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons, in which only the first occurrence of each element\r\n * is kept. The order of result values is determined by the order they occur\r\n * in the array.\r\n *\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @returns {Array} Returns the new duplicate free array.\r\n * @see uniqBy, uniqWith\r\n * @example\r\n *\r\n * uniq([2, 1, 2])\r\n * // => [2, 1]\r\n */\r\nfunction uniq<T extends Array<any>>(array: readonly [...T]): Array<T extends Array<infer U> ? U : T> {\r\n    return array != null && array.length ? baseUniq(array) : [];\r\n}\r\n\r\nexport default uniq;\r\n// import baseUniq from \"./_internal/baseUniq.js\";\r\n\r\n// /**\r\n//  * Creates a duplicate-free version of an array, using\r\n//  * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n//  * for equality comparisons, in which only the first occurrence of each element\r\n//  * is kept. The order of result values is determined by the order they occur\r\n//  * in the array.\r\n//  *\r\n//  * @since 0.1.0\r\n//  * @category Array\r\n//  * @param {Array} array The array to inspect.\r\n//  * @returns {Array} Returns the new duplicate free array.\r\n//  * @see uniqBy, uniqWith\r\n//  * @example\r\n//  *\r\n//  * uniq([2, 1, 2])\r\n//  * // => [2, 1]\r\n//  */\r\n// function uniq(array) {\r\n//     return array != null && array.length ? baseUniq(array) : [];\r\n// }\r\n\r\n// export default uniq;\r\n","function createIsNativeType<T>(nativeObject: any): (value: any) => value is T {\r\n    return (value: any): value is T => value != null && value instanceof nativeObject;\r\n}\r\n\r\nexport default createIsNativeType;\r\n","import createIsNativeType from \"./_internal/_createIsNativeType\";\r\n\r\nconst isPanel = createIsNativeType<Panel>(Panel);\r\n\r\nexport default isPanel;\r\n","import createIsNativeType from \"./_internal/_createIsNativeType\";\r\n\r\nconst isWindow = createIsNativeType<Window>(Window);\r\n\r\nexport default isWindow;\r\n","import { nativeConcat, nativeSlice } from \"./lodash/basic/_global\";\r\nimport assign from \"./lodash/basic/assign\";\r\nimport contains from \"./lodash/basic/contains\";\r\nimport isArray from \"./lodash/basic/isArray\";\r\nimport stubFalse from \"./lodash/basic/stubFalse\";\r\nimport uniq from \"./lodash/#uniq\";\r\nimport clone from \"./lodash/#clone\";\r\nimport forEach from \"./lodash/#forEach\";\r\nimport forOwn from \"./lodash/#forOwn\";\r\nimport has from \"./lodash/#has\";\r\nimport isNil from \"./lodash/#isNil\";\r\nimport isNull from \"./lodash/#isNull\";\r\nimport isObject from \"./lodash/#isObject\";\r\nimport map from \"./lodash/#map\";\r\nimport some from \"./lodash/#some\";\r\nimport isPanel from \"./isPanel\";\r\nimport isWindow from \"./isWindow\";\r\n\r\nconst root = this;\r\nconst global = $.global;\r\nconst tree: Tree = { version: \"beta 1.0.0\", parse: runInContext, windows: [] };\r\nconst layoutModeFlags = [0, 1, 2];\r\nconst validContainerType = [\"dialog\", \"palette\", \"window\"];\r\nconst mainContainerDefault: ContainerDefault = { dockable: true, show: true, singleton: false };\r\n\r\nconst controlParamRef = {\r\n    button: 3,\r\n    checkbox: 3,\r\n    dropdownlist: 3,\r\n    edittext: 3,\r\n    iconbutton: 3,\r\n    image: 3,\r\n    listbox: 3,\r\n    progressbar: 4,\r\n    radiobutton: 3,\r\n    scrollbar: 5,\r\n    slider: 5,\r\n    statictext: 3,\r\n    treeview: 3,\r\n};\r\nconst containerParamRef = { group: 2, panel: 3, tab: 3, tabbedpanel: 3 };\r\n\r\nconst elementTypeFlags = {\r\n    button: \"A\",\r\n    checkbox: \"B\",\r\n    dialog: \"C\",\r\n    dropdownlist: \"D\",\r\n    edittext: \"E\",\r\n    group: \"G\",\r\n    iconbutton: \"H\",\r\n    image: \"I\",\r\n    item: \"J\",\r\n    listbox: \"K\",\r\n    node: \"L\",\r\n    palette: \"M\",\r\n    panel: \"N\",\r\n    progressbar: \"O\",\r\n    radiobutton: \"P\",\r\n    scrollbar: \"Q\",\r\n    slider: \"R\",\r\n    statictext: \"S\",\r\n    tab: \"T\",\r\n    tabbedpanel: \"U\",\r\n    treeview: \"V\",\r\n    window: \"W\",\r\n};\r\n\r\nconst reCombination = /[CGMNTW][ABDEFGHIKNOPQRSUV]|[DK]J|[VL][LJ]|UT/,\r\n    reContainer = /[DGKLNTUV]/,\r\n    reListItemContainer = /[DKLV]/,\r\n    reSelectableElement = /[DKUV]/,\r\n    reNativeContainer = /[GNTU]/,\r\n    reNativeControl = /[ABDEHIKOPQRSV]/;\r\n\r\nconst isContainer = createIsElementFlag<ContainerFlags>(reContainer),\r\n    isListItemContainer = createIsElementFlag<ListItemContainerFlags>(reListItemContainer),\r\n    isNativeContainer = createIsElementFlag<NativeContainerFlags>(reNativeContainer),\r\n    isNativeControl = createIsElementFlag<NativeControlFlags>(reNativeControl),\r\n    isSelectableElement = createIsElementFlag<SelectableElementFlags>(reSelectableElement);\r\n\r\nfunction addContainer(container: LooseContainer, value: object, flag: string, collector: ElementCollector): LooseContainer {\r\n    return flag == \"node\" ? addNodeContainer(container as TreeViewNode, value, flag, collector) : addGeneralContainer(container as NativeContainer, value, flag, collector);\r\n}\r\n\r\nfunction addControl(container: LooseContainer, value: object, key: string, collector: ElementCollector): void {\r\n    const element = isListItemContainer(container.type) ? addListItem(container as ListItemContainer, value, key, collector) : addGeneralControl(container as NativeContainer, value, key, collector);\r\n    assign(element, getElementStyle(value));\r\n}\r\n\r\nfunction addGeneralContainer(container: NativeContainer, value: object, flag: string, collector: ElementCollector) {\r\n    const style = getElementStyle(value);\r\n    const newContainer = nativeAddContainer(container, flag, assignElementParam(value, flag));\r\n\r\n    if (isSelectableElement(flag) && has(style, \"selection\")) {\r\n        const value = { container: newContainer as SelectableElement, itemIndex: (style as AnyObject).selection };\r\n        collector.selectableElement.push(value);\r\n        delete (style as AnyObject)[\"selection\"];\r\n        return assign(newContainer, style);\r\n    }\r\n\r\n    assign(newContainer, style);\r\n    return newContainer;\r\n}\r\n\r\nfunction addGeneralControl(container: NativeContainer, value: object, flag: string, collector: ElementCollector): NativeControl {\r\n    return nativeAddControl(container, flag, assignElementParam(value, flag));\r\n}\r\n\r\nfunction addGetElementMethods(constructors: [typeof Window, typeof Panel, typeof Group]): void {\r\n    forEach(constructors, constructor => {\r\n        const prototype = constructor.prototype as AnyObject;\r\n        prototype.getElementById = getElementById;\r\n        prototype.getElementsByName = getElementsByName;\r\n        prototype.getElementsByType = getElementsByType;\r\n        freezeProperty(prototype, \"getElementById\");\r\n        freezeProperty(prototype, \"getElementsByName\");\r\n        freezeProperty(prototype, \"getElementsByType\");\r\n    });\r\n}\r\n\r\nfunction addListItem(container: ListItemContainer, value: object, flag: string, collector: ElementCollector): ListItem {\r\n    return nativeAddNodeItem(container, getListItemParam(value));\r\n}\r\n\r\nfunction addNodeContainer(container: TreeViewNode, value: object, flag: string, collector: ElementCollector): TreeViewNode {\r\n    const style = getElementStyle(value) as AnyObject;\r\n    const node = nativeAddNode(container, getListItemParam(value));\r\n    if (style.expanded) {\r\n        collector.nodeItems.push(node);\r\n    }\r\n    delete style[\"expanded\"];\r\n    assign(node, style);\r\n\r\n    return node;\r\n}\r\n\r\nfunction assignContext(global: unknown, dockable: boolean, isSingletonWindow: boolean) {\r\n    if (isSingletonWindow || !dockable) {\r\n        return Window;\r\n    }\r\n    if (isValidContext(root)) {\r\n        return root;\r\n    }\r\n    return isValidContext(global) ? global : Window;\r\n}\r\n\r\nfunction assignElementParam(value: object, flag: string): Array<unknown> {\r\n    return assignUniqueName(getElementParam(value), flag);\r\n}\r\n\r\nfunction assignLayoutMode(setAll: number, setAlone: number): number {\r\n    if (contains(layoutModeFlags, setAlone)) {\r\n        return setAlone;\r\n    }\r\n    if (contains(layoutModeFlags, setAll)) {\r\n        return setAll;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction assignUniqueName(param: Array<unknown>, flag: string): Array<unknown> {\r\n    const name = param[0];\r\n    if (isNil(name)) {\r\n        return param;\r\n    }\r\n    const index = getCreationPropertiesIndex(flag);\r\n    const creationProperties = param[index];\r\n    if (!isObject(creationProperties)) {\r\n        param[index] = {};\r\n    }\r\n    if (has(creationProperties, \"name\")) {\r\n        return param;\r\n    }\r\n    (param[index] as AnyObject).name = name;\r\n\r\n    return param;\r\n}\r\n\r\nfunction assignWindowType(param: Array<unknown>): Array<unknown> {\r\n    const type = String(param[0]);\r\n    param[0] = contains(validContainerType, type) ? type : [\"palette\"];\r\n    return param;\r\n}\r\n\r\nfunction baseGet(object: AnyObject, key: string): any {\r\n    return isNil(object) ? undefined : object[key];\r\n}\r\n\r\nfunction baseGetConfig(value: object): any {\r\n    return baseGet(value, \"config\");\r\n}\r\n\r\nfunction baseGetElementId(element: _Control): string {\r\n    const properties = (element as AnyObject).properties;\r\n    return properties && properties.name;\r\n}\r\n\r\nfunction baseGetListItemParam(value: object): any {\r\n    return baseGet(value, \"param\");\r\n}\r\n\r\nfunction baseGetParam(value: object): Array<unknown> {\r\n    const result = baseGet(value, \"param\");\r\n    return isArray(result) ? mapNullToUndefined(result) : [];\r\n}\r\n\r\nfunction baseGetStyle(value: object): object {\r\n    const result = baseGet(value, \"style\");\r\n    return isObject(result) ? result : {};\r\n}\r\n\r\nfunction buildNativeWindow(resource: AnyObject, context: MainContainer, showWindow: boolean, layoutMode: boolean): MainContainer {\r\n    const container = bulidElements(resource, context);\r\n    initLayout(container, layoutMode);\r\n    if (isWindow(container) && showWindow) {\r\n        container.show();\r\n    }\r\n    return container;\r\n}\r\n\r\nfunction buildSingletonWindow(resource: AnyObject, context: MainContainer, showWindow: boolean, layoutMode: boolean): () => MainContainer {\r\n    let container: MainContainer;\r\n\r\n    return () => {\r\n        if (isInvisibleContainer(container)) {\r\n            container = bulidElements(resource, context);\r\n        }\r\n        initLayout(container, layoutMode);\r\n        if (isWindow(container) && showWindow) {\r\n            container.show();\r\n        }\r\n        return container;\r\n    };\r\n}\r\n\r\nfunction buildWindow(isSingletonWindow: boolean): Window | Panel {\r\n    const func = isSingletonWindow ? buildSingletonWindow : buildNativeWindow;\r\n    return func.apply(null, nativeSlice.call(arguments, 1));\r\n}\r\n\r\nfunction bulidElements(resource: AnyObject, context: MainContainer): MainContainer {\r\n    const container = initMainContainer(resource, context);\r\n    const collector: ElementCollector = { nodeItems: [], selectableElement: [] };\r\n    parseElement(resource, container, collector);\r\n    selectChildItem(collector.selectableElement);\r\n    expandTreeViewNodes(collector.nodeItems);\r\n    return container;\r\n}\r\n\r\nfunction castArray<T>(value: T | Array<T>): Array<T> {\r\n    return isArray(value) ? value : [value];\r\n}\r\n\r\nfunction createIsElementFlag<T extends string>(regex: RegExp) {\r\n    return (flag: string): flag is T => {\r\n        if (has(elementTypeFlags, flag)) {\r\n            return regex.test(elementTypeFlags[flag as ElementFlags]);\r\n        }\r\n        return false;\r\n    };\r\n}\r\n\r\nfunction baseEachElement(containers: Array<Container>, accumulator: Array<_Control>, breaker: (accumulator: Array<_Control>) => boolean, predicate: (element: _Control) => boolean): boolean {\r\n    return some(containers, container => {\r\n        const result: Array<Container> = [];\r\n        const isDone = some(container.children, element => {\r\n            if (isNativeContainer(element.type)) {\r\n                result.push(element as Container);\r\n            }\r\n            if (predicate(element)) {\r\n                accumulator.push(element);\r\n            }\r\n            return breaker(accumulator);\r\n        });\r\n        return isDone ? true : baseEachElement(result, accumulator, breaker, predicate);\r\n    });\r\n}\r\n\r\nfunction expandTreeViewNodes(nodes: Array<TreeViewNode>): void {\r\n    forEach(nodes, node => {\r\n        node.expanded = true;\r\n    });\r\n}\r\n\r\nfunction filterFindElementInput(input: unknown): Array<string> {\r\n    return uniq(map(nativeConcat.apply([], input), String));\r\n}\r\n\r\nfunction freezeProperty<T extends object>(object: T, property: string) {\r\n    object.watch(property, (name: string, oldValue: T) => oldValue);\r\n}\r\n\r\nfunction getCreationPropertiesIndex(key: string): number {\r\n    if (isNativeControl(key)) {\r\n        return controlParamRef[key];\r\n    }\r\n    if (isNativeContainer(key)) {\r\n        return containerParamRef[key];\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getElementById(this: Container, targetId: unknown): _Control | null {\r\n    const id = String(targetId);\r\n    const result: Array<_Control> = [];\r\n\r\n    const breaker = (accumulator: Array<_Control>): boolean => accumulator.length > 0;\r\n\r\n    baseEachElement([this], result, breaker, element => {\r\n        const elementId = baseGetElementId(element);\r\n        if (isNil(elementId)) {\r\n            return false;\r\n        }\r\n        return id === elementId;\r\n    });\r\n\r\n    return result.length === 0 ? null : result[0];\r\n}\r\n\r\nfunction getElementParam(value: object): Array<unknown> {\r\n    return isArray(value) ? mapNullToUndefined(value) : baseGetParam(value);\r\n}\r\n\r\nfunction getElementStyle(value: object): object {\r\n    return isArray(value) ? {} : baseGetStyle(value);\r\n}\r\n\r\nfunction getElementsByName(this: Container, ...args: Array<unknown>): Array<_Control> | null {\r\n    const targetNames = filterFindElementInput(arguments);\r\n    const seen: Array<string> = [];\r\n    const result: Array<_Control> = [];\r\n\r\n    const breaker = (): boolean => targetNames.length === seen.length;\r\n\r\n    baseEachElement([this], result, breaker, element => {\r\n        const elementId = baseGetElementId(element);\r\n        if (isNil(elementId)) {\r\n            return false;\r\n        }\r\n        if (contains(targetNames, elementId) && !contains(seen, elementId)) {\r\n            seen.push(elementId);\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n\r\n    return result.length === 0 ? null : result;\r\n}\r\n\r\nfunction getElementsByType(this: Container, ...args: Array<unknown>): Array<_Control> | null {\r\n    const targetTypes = filterFindElementInput(arguments);\r\n    const result: Array<_Control> = [];\r\n\r\n    baseEachElement([this], result, stubFalse, element => contains(targetTypes, element.type));\r\n\r\n    return result.length === 0 ? null : result;\r\n}\r\n\r\nfunction getListItemParam(value: unknown): string {\r\n    const result = isObject(value) ? baseGetListItemParam(value) : value;\r\n    return String(result);\r\n}\r\n\r\nfunction getMainContainer(param: Array<any>, context: MainContainer): _Panel | Window {\r\n    return isPanel(context) ? context : new Window(param[0], param[1], param[2], param[3]);\r\n}\r\n\r\nfunction initBuildValues(resource: AnyObject, parserSelf: AnyObject) {\r\n    const config = assign(clone(mainContainerDefault), baseGetConfig(resource));\r\n    const showWindow = Boolean(config.show);\r\n    const dockable = Boolean(config.dockable);\r\n    const isSingletonWindow = Boolean(config.singleton);\r\n    const context = assignContext(parserSelf.context, dockable, isSingletonWindow);\r\n    const layoutMode = assignLayoutMode(parserSelf.layoutMode, config.layoutMode);\r\n    return [isSingletonWindow, resource, context, showWindow, layoutMode];\r\n}\r\n\r\nfunction initLayout(container: Container, layoutMode: boolean): void {\r\n    container.layout.layout(layoutMode);\r\n    container.layout.resize();\r\n}\r\n\r\nfunction initMainContainer(resource: AnyObject, context: MainContainer): MainContainer {\r\n    const mainContainer = getMainContainer(assignWindowType(baseGetParam(resource)), context) as _Window;\r\n    mainContainer.onResizing = mainContainer.onResize = function () {\r\n        this.layout.resize();\r\n    };\r\n    assign(mainContainer, baseGetStyle(resource));\r\n    return mainContainer;\r\n}\r\n\r\nfunction isInvisibleContainer(container: Panel | Window): boolean {\r\n    return isNil(container) || !container.visible;\r\n}\r\n\r\nfunction isTabbedpanel(element: _Control): element is TabbedPanel {\r\n    return element.type == \"tabbedpanel\";\r\n}\r\n\r\nfunction isValidCombination(parentType: ElementFlags, childType: ElementFlags): boolean {\r\n    const flagCombination = elementTypeFlags[parentType] + elementTypeFlags[childType];\r\n    return reCombination.test(flagCombination);\r\n}\r\n\r\nfunction isValidContext(context: unknown): boolean {\r\n    return context === global || isPanel(context);\r\n}\r\n\r\nfunction isValidElement(flag: string): flag is ElementFlags {\r\n    return has(elementTypeFlags, flag);\r\n}\r\n\r\nfunction mapNullToUndefined(array: Array<unknown>): Array<unknown> {\r\n    return map(array, value => (isNull(value) ? undefined : value));\r\n}\r\n\r\nfunction nativeAddContainer(container: NativeContainer, type: any, param: Array<any>): NativeContainer {\r\n    return container.add(type, param[1], param[2], param[3]) as unknown as NativeContainer;\r\n}\r\n\r\nfunction nativeAddControl(container: NativeContainer, type: any, param: Array<any>): NativeControl {\r\n    return container.add(type, param[1], param[2], param[3], param[4], param[5]) as unknown as NativeControl;\r\n}\r\n\r\nfunction nativeAddNode(container: TreeViewNode, text: string): TreeViewNode {\r\n    return container.add(\"node\", text) as TreeViewNode;\r\n}\r\n\r\nfunction nativeAddNodeItem(node: ListItemContainer, text: string): ListItem {\r\n    return node.add(\"item\", text);\r\n}\r\n\r\nfunction parseElement(resource: AnyObject, container: LooseContainer, collector: ElementCollector) {\r\n    forOwn(resource, (value, key) => {\r\n        const flag = trimNumber(key).toLowerCase();\r\n        if (isValidElement(flag) && isValidCombination(container.type as ElementFlags, flag)) {\r\n            if (isContainer(flag)) {\r\n                const newContainer = addContainer(container, value, flag, collector);\r\n                parseElement(value, newContainer, collector);\r\n            } else {\r\n                addControl(container, value, flag, collector);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction runInContext(resource: AnyObject): MainContainer {\r\n    addGetElementMethods([Window, Panel, Group]);\r\n    const resource_ = isObject(resource) ? resource : {};\r\n    const container = buildWindow.apply(null, initBuildValues(resource_, tree));\r\n    tree.windows.push(container);\r\n    return container;\r\n}\r\n\r\nfunction selectChildItem(selectableElementValues: Array<SelectableElementValue>) {\r\n    forEach(selectableElementValues, value => {\r\n        const container = value.container;\r\n        const itemIndex = value.itemIndex;\r\n\r\n        if (isTabbedpanel(container)) {\r\n            container.selection = itemIndex;\r\n        } else {\r\n            container.selection = map(castArray(itemIndex), value => container.items[value]) as unknown as ListItem;\r\n        }\r\n    });\r\n}\r\n\r\nfunction trimNumber(string: string): string {\r\n    return string.replace(/\\d/g, \"\");\r\n}\r\n\r\nexport default tree;\r\n","function eachProperties<T extends PropertyGroup>(propertyGroup: T, iteratee: (property: _PropertyClasses, index: number, propertyGroup: T) => boolean | void): T {\r\n    let index = 0;\r\n    const length = propertyGroup.numProperties + 1;\r\n\r\n    while (++index < length) {\r\n        if (iteratee(propertyGroup.property(index), index, propertyGroup) === false) {\r\n            break;\r\n        }\r\n    }\r\n    return propertyGroup;\r\n}\r\n\r\nexport default eachProperties;\r\n","function setUndoGroup(undoString: string, func: (...args: Array<any>) => void) {\r\n    app.beginUndoGroup(undoString);\r\n    func();\r\n    app.endUndoGroup();\r\n}\r\n\r\nexport default setUndoGroup;\r\n","// 封装了一些常用模块：文件系统、UI 构建、工具函数等\r\nimport * as _ from 'soil-ts';\r\n\r\n/**辅助模块 */\r\nexport const a = {\r\n    /**终止程序并发出警告 */\r\n    abort(message: string) {\r\n        if (!$.level) {\r\n            alert(message, 'Abort');\r\n        }\r\n        throw new Error(message);\r\n    },\r\n    /**数组.length < minLength 则 abort */\r\n    checkLength(array: any[], message: string, minLength = 1) {\r\n        if (array.length < minLength) {\r\n            a.abort(message);\r\n        }\r\n    },\r\n    /**\r\n     * 让数组内所有元素执行 remove()\r\n     * @description 对象.remove() 会导致该对象所在的对象数组 invalid\r\n     * @description 解决方案1: 设置一个对象, 引用该元素, 再执行 remove()\r\n     * @description 解决方案2: 获取元素的parent和index, 再执行 remove()\r\n     */\r\n    emptyArray(array: _PropertyClasses[]) {\r\n        const obj = {} as Record<string, Property>;\r\n        const group_info_arr = _.filter(\r\n            _.map(array, (e, i) => {\r\n                if (e instanceof PropertyGroup) {\r\n                    // return _.pick(e,  'propertyIndex');\r\n                    const { parentProperty, propertyIndex } = e;\r\n                    return { parentProperty, propertyIndex };\r\n                } else {\r\n                    obj[i] = e;\r\n                }\r\n            }),\r\n            (\r\n                e,\r\n            ): e is {\r\n                parentProperty: PropertyGroup;\r\n                propertyIndex: number;\r\n            } => !!e,\r\n        );\r\n        _.map(group_info_arr, ({ parentProperty, propertyIndex }) => {\r\n            parentProperty(propertyIndex).remove();\r\n        });\r\n        _.forOwn(obj, (value) => value.remove());\r\n    },\r\n};\r\n/**工具箱模块 */\r\nexport const t = {\r\n    // get\r\n    get_active_comp() {\r\n        const comp = app.project.activeItem;\r\n        return comp instanceof CompItem\r\n            ? comp\r\n            : a.abort('Please select a comp');\r\n    },\r\n    get_selected_comps() {\r\n        const comps = _.filter(\r\n            app.project.selection,\r\n            (e) => e instanceof CompItem,\r\n        );\r\n        a.checkLength(comps, 'Please select comps in project panel');\r\n        return comps;\r\n    },\r\n    get_selected_layers() {\r\n        const layers = t.get_active_comp().selectedLayers;\r\n        a.checkLength(layers, 'Please select layers');\r\n        return layers;\r\n    },\r\n    get_selected_properties() {\r\n        const layers = t.get_selected_layers();\r\n        return _.flatMap(layers, (layer) => layer.selectedProperties);\r\n    },\r\n    //add layer\r\n    add_layer: function (type = 'Shape') {\r\n        //@ts-ignore\r\n        return this.get_active_comp().layers['add' + type]?.();\r\n    } as {\r\n        (type?: 'Shape'): ShapeLayer;\r\n        (type: 'Text' | 'BoxText'): TextLayer;\r\n        (type: 'Camera'): CameraLayer;\r\n        (type: 'Light'): LightLayer;\r\n        (type: string): void;\r\n    },\r\n    add_solid_layer(bgColor = [0.5, 0.5, 0.5, 1]) {\r\n        const layer = t.add_layer();\r\n        layer.name = 'Solid';\r\n        const contents = layer.property(\r\n            'ADBE Root Vectors Group',\r\n        ) as PropertyGroup;\r\n        (\r\n            contents\r\n                .addProperty('ADBE Vector Shape - Rect')\r\n                .property('Size') as Property\r\n        ).setValue([layer.width, layer.height]);\r\n        (\r\n            contents\r\n                .addProperty('ADBE Vector Graphic - Fill')\r\n                .property('Color') as Property\r\n        ).setValue(bgColor);\r\n        return layer;\r\n    },\r\n    add_adjustment_layer() {\r\n        const layer = t.add_solid_layer();\r\n        layer.name = 'Adjustment';\r\n        layer.label = 5;\r\n        layer.adjustmentLayer = true;\r\n        return layer;\r\n    },\r\n    add_null_layer() {\r\n        const layer = t.add_layer();\r\n        layer.name = 'Null';\r\n        layer.label = 1;\r\n        layer.transform.scale.expression = ' 100';\r\n        layer.transform.opacity.setValue(0);\r\n        const contents = layer.property(\r\n            'ADBE Root Vectors Group',\r\n        ) as PropertyGroup;\r\n        contents.addProperty('ADBE Vector Shape - Rect');\r\n        return layer;\r\n    },\r\n    add_layer_from_group(group: PropertyGroup) {\r\n        const layer = group.propertyGroup(2);\r\n        if (!(layer instanceof ShapeLayer)) {\r\n            return a.abort('Please select ShapeLayer > Contents > Group');\r\n        }\r\n        const new_layer = layer.duplicate() as ShapeLayer;\r\n        new_layer.name = [layer.name, group.name].join(' - ');\r\n        const contents = new_layer.property(\r\n            'ADBE Root Vectors Group',\r\n        ) as PropertyGroup;\r\n        const beDels = [] as _PropertyClasses[];\r\n        _.eachProperties(contents, (e, i) => {\r\n            i + 1 != group.propertyIndex && e && beDels.push(e);\r\n        });\r\n        a.emptyArray(beDels);\r\n        return new_layer;\r\n    },\r\n    add_layers_from_selected_groups() {\r\n        const properties = t.get_selected_properties();\r\n        const groups = _.filter(\r\n            properties,\r\n            (e): e is PropertyGroup =>\r\n                e instanceof PropertyGroup && !(e instanceof MaskPropertyGroup),\r\n        );\r\n        a.checkLength(\r\n            groups,\r\n            'Please select PropertyGroups, MaskPropertyGroup is not allowed',\r\n        );\r\n        const beDels = _.map(groups, (e) => (t.add_layer_from_group(e), e));\r\n        a.emptyArray(beDels);\r\n    },\r\n    // unpack\r\n    unpack_comp(comp_layer: AVLayer) {\r\n        comp_layer.selected = true;\r\n        const { containingComp, startTime } = comp_layer;\r\n        const layers: LayerCollection = comp_layer.source.layers;\r\n        for (let i = 1; i <= layers.length; i++) {\r\n            layers[i].copyToComp(containingComp);\r\n            containingComp.layers[comp_layer.index - 1].startTime += startTime;\r\n        }\r\n        comp_layer.selected = false;\r\n    },\r\n    unpack_selected_comps() {\r\n        const layers = t.get_selected_layers();\r\n        const comp_layers = _.filter(\r\n            layers,\r\n            (layer): layer is AVLayer & { source: CompItem } => {\r\n                layer.selected = false;\r\n                return (\r\n                    layer instanceof AVLayer && layer.source instanceof CompItem\r\n                );\r\n            },\r\n        );\r\n        a.checkLength(comp_layers, 'Please select Comp layers');\r\n        const beDels = _.map(\r\n            comp_layers,\r\n            (e, i) => (t.unpack_comp(e), e.source),\r\n        );\r\n        a.emptyArray(beDels);\r\n    },\r\n    unpack_layer(layer: ShapeLayer) {\r\n        layer.selected = true;\r\n        const contents = layer.property(\r\n            'ADBE Root Vectors Group',\r\n        ) as PropertyGroup;\r\n        const group_array = [] as PropertyGroup[];\r\n        _.eachProperties(contents, (e) => {\r\n            e instanceof PropertyGroup &&\r\n                !(e instanceof MaskPropertyGroup) &&\r\n                group_array.push(e);\r\n        });\r\n        a.checkLength(\r\n            group_array,\r\n            `${layer.name} layer only has ${group_array.length} Groups`,\r\n            2,\r\n        );\r\n        _.map(group_array, t.add_layer_from_group);\r\n        layer.selected = false;\r\n    },\r\n    unpack_selected_layers() {\r\n        const layers = t.get_selected_layers();\r\n        const shape_layers = _.filter(layers, (e): e is ShapeLayer => {\r\n            e.selected = false;\r\n            return e instanceof ShapeLayer;\r\n        });\r\n        a.checkLength(shape_layers, 'Please select ShapeLayers');\r\n        const beDels = _.map(shape_layers, (e) => (t.unpack_layer(e), e));\r\n        a.emptyArray(beDels);\r\n    },\r\n    // render\r\n    render() {\r\n        app.project.renderQueue.showWindow(true);\r\n        app.project.renderQueue.render();\r\n    },\r\n    render_active_comp() {\r\n        t.render_comp(t.get_active_comp());\r\n    },\r\n    render_selected_comps() {\r\n        _.map(t.get_selected_comps(), t.render_comp);\r\n    },\r\n    render_comp(comp: CompItem) {\r\n        const item = app.project.renderQueue.items.add(comp);\r\n        t.render_setting(item);\r\n        item.render = true;\r\n    },\r\n    render_setting(item: RenderQueueItem) {\r\n        // item.setSettings({});\r\n        // item.outputModule(1).applyTemplate('Template');\r\n        if (!app.project.file) {\r\n            return alert('Please save the project first');\r\n        }\r\n        item.outputModule(1).setSettings({\r\n            'Output File Info': {\r\n                'Base Path': app.project.file.fsName.replace(/\\\\[^\\\\]+$/, ''),\r\n                'Subfolder Path': 'render',\r\n                'File Name': item.comp.name,\r\n            },\r\n        });\r\n    },\r\n    // expression fix\r\n    show_matchname() {\r\n        let selected: _PropertyClasses[] = [];\r\n        for (const fn of [\r\n            () => t.get_selected_properties(),\r\n            () => t.get_selected_layers(),\r\n        ]) {\r\n            selected = fn();\r\n            if (selected.length) break;\r\n        }\r\n        const matchanmes = _.map(selected, (item) => item.matchName);\r\n        prompt('You can copy them', matchanmes.join('; '), 'MatchNames');\r\n    },\r\n    simple_fix_expression() {\r\n        // expression_controls\r\n        _.forOwn(\r\n            {\r\n                '3D Point': 'ADBE Point3D Control',\r\n                Angle: 'ADBE Angle Control',\r\n                Checkbox: 'ADBE Checkbox Control',\r\n                Color: 'ADBE Color Control',\r\n                Layer: 'ADBE Layer Control',\r\n                Point: 'ADBE Point Control',\r\n                Slider: 'ADBE Slider Control',\r\n                // in AE 2024\r\n                'Dropdown Menu': 'Pseudo/@@ABzbw5g3TlyO2XPLzAXD9w',\r\n                Menu: 'Pseudo/@@ABzbw5g3TlyO2XPLzAXD9w',\r\n            },\r\n            (v, k) => {\r\n                app.project.autoFixExpressions(`${k} Control`, v);\r\n                app.project.autoFixExpressions(k, `${v}-0001`);\r\n            },\r\n        );\r\n    },\r\n};\r\n/**文件模块 */\r\nexport const f = {\r\n    read(path: string | File) {\r\n        const file = path instanceof File ? path : f.repair_path(path);\r\n        file.encoding = 'utf-8';\r\n        file.open('r');\r\n        const text = file.read();\r\n        file.close();\r\n        return text;\r\n    },\r\n    write(path: string | File, text: string) {\r\n        const file = path instanceof File ? path : f.repair_path(path);\r\n        // if (\r\n        //     file.exists &&\r\n        //     !confirm('Find same name file, should replace it? ' + file.name)\r\n        // ) {\r\n        //     return;\r\n        // }\r\n        file.encoding = 'utf-8';\r\n        file.open('w');\r\n        file.write(text);\r\n        file.close();\r\n    },\r\n    open(config: {\r\n        path?: string;\r\n        prompt?: string;\r\n        filter?: string;\r\n        multi?: boolean;\r\n    }): Record<string, string> | void {\r\n        const { path, prompt, filter, multi } = config;\r\n        const files =\r\n            path !== void 0\r\n                ? new File(path).openDlg(prompt, filter, multi)\r\n                : File.openDialog(prompt, filter, multi);\r\n        if (!files) return;\r\n        const datas: Record<string, string> = {};\r\n        files instanceof File\r\n            ? [files]\r\n            : _.each(files, (file) => {\r\n                  datas[File.decode(file.name)] = f.read(file.fsName);\r\n              });\r\n        return datas;\r\n    },\r\n    save(\r\n        datas: Record<string, string>,\r\n        config: { path?: string; prompt?: string },\r\n    ) {\r\n        const { path, prompt } = config;\r\n        const folder =\r\n            path !== void 0\r\n                ? new Folder(path).selectDlg(prompt)\r\n                : Folder.selectDialog(prompt);\r\n        if (!folder) return;\r\n        _.forOwn(datas, (text, name) => {\r\n            f.write(folder.fsName + '\\\\' + name, text);\r\n        });\r\n    },\r\n    /**Check if the path exists, if not, create the path */\r\n    repair_path: ((path: string, type = 'file') => {\r\n        function create_folder<T>(folder: Folder, result: T): T {\r\n            if (folder.exists || folder.create()) {\r\n                return result;\r\n            } else {\r\n                return a.abort('Failed to create folder: ' + folder.fsName);\r\n            }\r\n        }\r\n        switch (type) {\r\n            case 'file': {\r\n                const file = new File(path);\r\n                return file.exists ? file : create_folder(file.parent, file);\r\n            }\r\n            case 'folder': {\r\n                const folder = new Folder(path);\r\n                return create_folder(folder, folder);\r\n            }\r\n        }\r\n    }) as {\r\n        (path: string, type?: 'file'): File;\r\n        (path: string, type: 'folder'): Folder;\r\n    },\r\n};\r\n","// 自制工具面板\r\nimport * as _ from 'soil-ts';\r\nimport { t } from './util';\r\n\r\nconst ui = _.reduce(\r\n    [\r\n        ['UC', 'unpack_selected_comps'],\r\n        ['UL', 'unpack_selected_layers'],\r\n        ['AS', 'add_solid_layer'],\r\n        ['AA', 'add_adjustment_layer'],\r\n        ['AN', 'add_null_layer'],\r\n        ['AG', 'add_layers_from_selected_groups'],\r\n        ['R', 'render_selected_comps'],\r\n        ['F', 'simple_fix_expression'],\r\n        ['SM', 'show_matchname'],\r\n    ] satisfies [string, keyof typeof t][],\r\n    (acc, [text, helpTip], i) => {\r\n        acc['button' + i] = {\r\n            style: {\r\n                text,\r\n                helpTip,\r\n                preferredSize: [30, 30],\r\n                onClick: () => _.setUndoGroup(text, t[helpTip]),\r\n            },\r\n        };\r\n        return acc;\r\n    },\r\n    {\r\n        style: {\r\n            orientation: 'column',\r\n            alignChildren: 'center',\r\n            margins: 0,\r\n            spacing: 0,\r\n        },\r\n    } as Data,\r\n);\r\n_.tree.context = this;\r\n_.tree.parse(ui);\r\n"],"names":["arrayProto","Array","prototype","objectProto","Object","hasOwnProperty","nativeConcat","concat","nativePush","push","nativeSlice","slice","nativeToString","toString","MAX_SAFE_INTEGER","reFlags","reIsUint","has","object","key","call","isObject","value","type","assign","source","result","contains","array","index","length","getTag","undefined","isArray","isObjectLike","isArguments","or","arguments","stubFalse","map","iteratee","isIndex","test","arrayLikeKeys","inherited","isArr","isArg","skipIndexes","isLength","isArrayLike","keys","isFlattenable","baseFlatten","depth","predicate","isStrict","apply","reduce","initialValue","accumulator","startIndex","currentIndex","filter","resIndex","cloneRegExp","regexp","matched","exec","flags","RegExpCtor","constructor","lastIndex","copyArray","copyObject","props","initCloneObject","Ctor","argsTag","arrayTag","boolTag","dateTag","errorTag","numberTag","objectTag","regexpTag","stringTag","cloneableTags","initCloneByTag","tag","valueOf","isRegExpExecArray","initCloneArray","input","baseClone","isDeep","customizer","stackA","stackB","isFunc","clone","forEach","baseFindIndex","fromIndex","fromRight","baseIsNaN","strictIndexOf","baseIndexOf","arrayIncludes","some","flatMap","collection","forOwn","isNil","isNull","baseUniq","comparator","includes","seen","outer","computed","seenIndex","uniq","createIsNativeType","nativeObject","isPanel","Panel","isWindow","Window","root","this","global","$","tree","version","parse","runInContext","windows","layoutModeFlags","validContainerType","mainContainerDefault","dockable","show","singleton","controlParamRef","button","checkbox","dropdownlist","edittext","iconbutton","image","listbox","progressbar","radiobutton","scrollbar","slider","statictext","treeview","containerParamRef","group","panel","tab","tabbedpanel","elementTypeFlags","dialog","item","node","palette","window","reCombination","reContainer","reListItemContainer","reSelectableElement","reNativeContainer","reNativeControl","isContainer","createIsElementFlag","isListItemContainer","isNativeContainer","isNativeControl","isSelectableElement","addContainer","container","flag","collector","addNodeContainer","addGeneralContainer","addControl","element","addListItem","addGeneralControl","getElementStyle","style","newContainer","nativeAddContainer","assignElementParam","value_1","itemIndex","selection","selectableElement","nativeAddControl","addGetElementMethods","constructors","getElementById","getElementsByName","getElementsByType","freezeProperty","nativeAddNodeItem","getListItemParam","nativeAddNode","expanded","nodeItems","assignContext","isSingletonWindow","isValidContext","assignUniqueName","getElementParam","assignLayoutMode","setAll","setAlone","param","name","getCreationPropertiesIndex","creationProperties","assignWindowType","String","baseGet","baseGetConfig","baseGetElementId","properties","baseGetListItemParam","baseGetParam","mapNullToUndefined","baseGetStyle","buildNativeWindow","resource","context","showWindow","layoutMode","bulidElements","initLayout","buildSingletonWindow","isInvisibleContainer","buildWindow","func","initMainContainer","parseElement","selectChildItem","expandTreeViewNodes","castArray","regex","baseEachElement","containers","breaker","isDone","children","nodes","filterFindElementInput","property","watch","oldValue","targetId","id","elementId","targetNames","targetTypes","getMainContainer","initBuildValues","parserSelf","config","Boolean","layout","resize","mainContainer","onResizing","onResize","visible","isTabbedpanel","isValidCombination","parentType","childType","flagCombination","isValidElement","add","text","trimNumber","toLowerCase","Group","resource_","selectableElementValues","items","string","replace","eachProperties","propertyGroup","numProperties","setUndoGroup","undoString","app","beginUndoGroup","endUndoGroup","a","abort","message","level","alert","Error","checkLength","minLength","emptyArray","obj","group_info_arr","_.filter","_.map","e","i","PropertyGroup","parentProperty","propertyIndex","_a","remove","_.forOwn","t","get_active_comp","comp","project","activeItem","CompItem","get_selected_comps","comps","get_selected_layers","layers","selectedLayers","get_selected_properties","_.flatMap","layer","selectedProperties","add_layer","_b","add_solid_layer","bgColor","contents","addProperty","setValue","width","height","add_adjustment_layer","label","adjustmentLayer","add_null_layer","transform","scale","expression","opacity","add_layer_from_group","ShapeLayer","new_layer","duplicate","join","beDels","_.eachProperties","add_layers_from_selected_groups","groups","MaskPropertyGroup","unpack_comp","comp_layer","selected","containingComp","startTime","copyToComp","unpack_selected_comps","comp_layers","AVLayer","unpack_layer","group_array","unpack_selected_layers","shape_layers","render","renderQueue","render_active_comp","render_comp","render_selected_comps","render_setting","file","outputModule","setSettings","fsName","show_matchname","_i","fn","matchanmes","matchName","prompt","simple_fix_expression","Angle","Checkbox","Color","Layer","Point","Slider","Menu","v","k","autoFixExpressions","ui","_.reduce","acc","helpTip","preferredSize","onClick","_.setUndoGroup","orientation","alignChildren","margins","spacing","_.tree"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45]}